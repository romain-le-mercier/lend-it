{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = subscribeToSimpleQuery;\nvar _common = require(\"../../utils/common\");\nfunction subscribeToSimpleQuery(query, subscriber) {\n  var alwaysEmit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var matcher = null;\n  var unsubscribed = false;\n  var unsubscribe = null;\n  query.collection._fetchQuery(query, function (result) {\n    if (unsubscribed) {\n      return;\n    }\n    if (result.error) {\n      (0, _common.logError)(result.error.toString());\n      return;\n    }\n    var initialRecords = result.value;\n    var matchingRecords = initialRecords;\n    var emitCopy = function emitCopy() {\n      return !unsubscribed && subscriber(matchingRecords.slice(0));\n    };\n    emitCopy();\n    if (unsubscribed) {\n      return;\n    }\n    unsubscribe = query.collection.experimentalSubscribe(function (changeSet) {\n      if (!matcher) {\n        matcher = require(\"../encodeMatcher\").default(query.description);\n      }\n      var shouldEmit = require(\"./processChangeSet\").default(changeSet, matcher, matchingRecords);\n      if (shouldEmit || alwaysEmit) {\n        emitCopy();\n      }\n    }, {\n      name: 'subscribeToSimpleQuery',\n      query: query,\n      subscriber: subscriber\n    });\n  });\n  return function () {\n    unsubscribed = true;\n    unsubscribe && unsubscribe();\n  };\n}","map":{"version":3,"names":["exports","__esModule","default","subscribeToSimpleQuery","_common","require","query","subscriber","alwaysEmit","arguments","length","undefined","matcher","unsubscribed","unsubscribe","collection","_fetchQuery","result","error","logError","toString","initialRecords","value","matchingRecords","emitCopy","slice","experimentalSubscribe","changeSet","description","shouldEmit","name"],"sources":["/app/node_modules/@nozbe/watermelondb/observation/subscribeToSimpleQuery/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = subscribeToSimpleQuery;\nvar _common = require(\"../../utils/common\");\nfunction subscribeToSimpleQuery(query, subscriber,\n// if true, emissions will always be made on collection change -- this is an internal hack needed by\n// observeQueryWithColumns\nalwaysEmit = false) {\n  var matcher = null;\n  var unsubscribed = false;\n  var unsubscribe = null;\n\n  // eslint-disable-next-line prefer-arrow-callback\n  query.collection._fetchQuery(query, function (result) {\n    if (unsubscribed) {\n      return;\n    }\n    if (result.error) {\n      (0, _common.logError)(result.error.toString());\n      return;\n    }\n    var initialRecords = result.value;\n\n    // Send initial matching records\n    var matchingRecords = initialRecords;\n    var emitCopy = function () {\n      return !unsubscribed && subscriber(matchingRecords.slice(0));\n    };\n    emitCopy();\n\n    // Check if emitCopy haven't completed source observable to avoid memory leaks\n    if (unsubscribed) {\n      return;\n    }\n\n    // Observe changes to the collection\n\n    // eslint-disable-next-line prefer-arrow-callback\n    unsubscribe = query.collection.experimentalSubscribe(function (changeSet) {\n      if (!matcher) {\n        matcher = require('../encodeMatcher').default(query.description);\n      }\n      // $FlowFixMe\n      var shouldEmit = require('./processChangeSet').default(changeSet, matcher, matchingRecords);\n      if (shouldEmit || alwaysEmit) {\n        emitCopy();\n      }\n    }, {\n      name: 'subscribeToSimpleQuery',\n      query: query,\n      subscriber: subscriber\n    });\n  });\n  return function () {\n    unsubscribed = true;\n    unsubscribe && unsubscribe();\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAGC,sBAAsB;AACxC,IAAIC,OAAO,GAAGC,OAAO,qBAAqB,CAAC;AAC3C,SAASF,sBAAsBA,CAACG,KAAK,EAAEC,UAAU,EAG7B;EAAA,IAApBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAChB,IAAIG,OAAO,GAAG,IAAI;EAClB,IAAIC,YAAY,GAAG,KAAK;EACxB,IAAIC,WAAW,GAAG,IAAI;EAGtBR,KAAK,CAACS,UAAU,CAACC,WAAW,CAACV,KAAK,EAAE,UAAUW,MAAM,EAAE;IACpD,IAAIJ,YAAY,EAAE;MAChB;IACF;IACA,IAAII,MAAM,CAACC,KAAK,EAAE;MAChB,CAAC,CAAC,EAAEd,OAAO,CAACe,QAAQ,EAAEF,MAAM,CAACC,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;MAC9C;IACF;IACA,IAAIC,cAAc,GAAGJ,MAAM,CAACK,KAAK;IAGjC,IAAIC,eAAe,GAAGF,cAAc;IACpC,IAAIG,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAe;MACzB,OAAO,CAACX,YAAY,IAAIN,UAAU,CAACgB,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;IACDD,QAAQ,CAAC,CAAC;IAGV,IAAIX,YAAY,EAAE;MAChB;IACF;IAKAC,WAAW,GAAGR,KAAK,CAACS,UAAU,CAACW,qBAAqB,CAAC,UAAUC,SAAS,EAAE;MACxE,IAAI,CAACf,OAAO,EAAE;QACZA,OAAO,GAAGP,OAAO,mBAAmB,CAAC,CAACH,OAAO,CAACI,KAAK,CAACsB,WAAW,CAAC;MAClE;MAEA,IAAIC,UAAU,GAAGxB,OAAO,qBAAqB,CAAC,CAACH,OAAO,CAACyB,SAAS,EAAEf,OAAO,EAAEW,eAAe,CAAC;MAC3F,IAAIM,UAAU,IAAIrB,UAAU,EAAE;QAC5BgB,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC,EAAE;MACDM,IAAI,EAAE,wBAAwB;MAC9BxB,KAAK,EAAEA,KAAK;MACZC,UAAU,EAAEA;IACd,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAO,YAAY;IACjBM,YAAY,GAAG,IAAI;IACnBC,WAAW,IAAIA,WAAW,CAAC,CAAC;EAC9B,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}