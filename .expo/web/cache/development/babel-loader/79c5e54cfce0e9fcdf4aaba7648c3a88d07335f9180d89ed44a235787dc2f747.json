{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = subscribeToQueryReloading;\nvar _common = require(\"../../utils/common\");\nvar _identicalArrays = _interopRequireDefault(require(\"../../utils/fp/identicalArrays\"));\nfunction subscribeToQueryReloading(query, subscriber) {\n  var shouldEmitStatus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var collection = query.collection;\n  var previousRecords = null;\n  var unsubscribed = false;\n  function reloadingObserverFetch() {\n    if (shouldEmitStatus) {\n      unsubscribed || subscriber(false);\n    }\n    collection._fetchQuery(query, function (result) {\n      if (result.error) {\n        (0, _common.logError)(result.error.toString());\n        return;\n      }\n      var records = result.value;\n      var shouldEmit = !unsubscribed && (shouldEmitStatus || !previousRecords || !(0, _identicalArrays.default)(records, previousRecords));\n      previousRecords = records;\n      shouldEmit && subscriber(records);\n    });\n  }\n  var unsubscribe = collection.database.experimentalSubscribe(query.allTables, reloadingObserverFetch, {\n    name: 'subscribeToQueryReloading observation',\n    query: query,\n    subscriber: subscriber\n  });\n  reloadingObserverFetch();\n  return function () {\n    unsubscribed = true;\n    unsubscribe();\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","exports","__esModule","default","subscribeToQueryReloading","_common","_identicalArrays","query","subscriber","shouldEmitStatus","arguments","length","undefined","collection","previousRecords","unsubscribed","reloadingObserverFetch","_fetchQuery","result","error","logError","toString","records","value","shouldEmit","unsubscribe","database","experimentalSubscribe","allTables","name"],"sources":["/app/node_modules/@nozbe/watermelondb/observation/subscribeToQueryReloading/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = subscribeToQueryReloading;\nvar _common = require(\"../../utils/common\");\nvar _identicalArrays = _interopRequireDefault(require(\"../../utils/fp/identicalArrays\"));\n// Produces an observable version of a query by re-querying the database\n// when any change occurs in any of the relevant Stores.\n// This is inefficient for simple queries, but necessary for complex queries\nfunction subscribeToQueryReloading(query, subscriber,\n// Emits `false` when query fetch begins + always emits even if no change - internal trick needed\n// by observeWithColumns\nshouldEmitStatus = false) {\n  var {\n    collection: collection\n  } = query;\n  var previousRecords = null;\n  var unsubscribed = false;\n  function reloadingObserverFetch() {\n    if (shouldEmitStatus) {\n      unsubscribed || subscriber(false);\n    }\n    collection._fetchQuery(query, function (result) {\n      if (result.error) {\n        (0, _common.logError)(result.error.toString());\n        return;\n      }\n      var records = result.value;\n      var shouldEmit = !unsubscribed && (shouldEmitStatus || !previousRecords || !(0, _identicalArrays.default)(records, previousRecords));\n      previousRecords = records;\n      shouldEmit && subscriber(records);\n    });\n  }\n  var unsubscribe = collection.database.experimentalSubscribe(query.allTables, reloadingObserverFetch, {\n    name: 'subscribeToQueryReloading observation',\n    query: query,\n    subscriber: subscriber\n  });\n  reloadingObserverFetch();\n  return function () {\n    unsubscribed = true;\n    unsubscribe();\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AACpFC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAGC,yBAAyB;AAC3C,IAAIC,OAAO,GAAGL,OAAO,qBAAqB,CAAC;AAC3C,IAAIM,gBAAgB,GAAGP,sBAAsB,CAACC,OAAO,iCAAiC,CAAC,CAAC;AAIxF,SAASI,yBAAyBA,CAACG,KAAK,EAAEC,UAAU,EAG1B;EAAA,IAA1BC,gBAAgB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACtB,IACcG,UAAU,GACpBN,KAAK,CADPM,UAAU;EAEZ,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,YAAY,GAAG,KAAK;EACxB,SAASC,sBAAsBA,CAAA,EAAG;IAChC,IAAIP,gBAAgB,EAAE;MACpBM,YAAY,IAAIP,UAAU,CAAC,KAAK,CAAC;IACnC;IACAK,UAAU,CAACI,WAAW,CAACV,KAAK,EAAE,UAAUW,MAAM,EAAE;MAC9C,IAAIA,MAAM,CAACC,KAAK,EAAE;QAChB,CAAC,CAAC,EAAEd,OAAO,CAACe,QAAQ,EAAEF,MAAM,CAACC,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;QAC9C;MACF;MACA,IAAIC,OAAO,GAAGJ,MAAM,CAACK,KAAK;MAC1B,IAAIC,UAAU,GAAG,CAACT,YAAY,KAAKN,gBAAgB,IAAI,CAACK,eAAe,IAAI,CAAC,CAAC,CAAC,EAAER,gBAAgB,CAACH,OAAO,EAAEmB,OAAO,EAAER,eAAe,CAAC,CAAC;MACpIA,eAAe,GAAGQ,OAAO;MACzBE,UAAU,IAAIhB,UAAU,CAACc,OAAO,CAAC;IACnC,CAAC,CAAC;EACJ;EACA,IAAIG,WAAW,GAAGZ,UAAU,CAACa,QAAQ,CAACC,qBAAqB,CAACpB,KAAK,CAACqB,SAAS,EAAEZ,sBAAsB,EAAE;IACnGa,IAAI,EAAE,uCAAuC;IAC7CtB,KAAK,EAAEA,KAAK;IACZC,UAAU,EAAEA;EACd,CAAC,CAAC;EACFQ,sBAAsB,CAAC,CAAC;EACxB,OAAO,YAAY;IACjBD,YAAY,GAAG,IAAI;IACnBU,WAAW,CAAC,CAAC;EACf,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}