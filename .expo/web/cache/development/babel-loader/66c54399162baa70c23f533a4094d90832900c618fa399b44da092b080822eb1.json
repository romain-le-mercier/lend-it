{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = cloneMessage;\nexports.shallowCloneDeepObjects = shallowCloneDeepObjects;\nfunction shallowCloneDeepObjects(value) {\n  if (Array.isArray(value)) {\n    var returned = new Array(value.length);\n    for (var i = 0, len = value.length; i < len; i += 1) {\n      returned[i] = shallowCloneDeepObjects(value[i]);\n    }\n    return returned;\n  } else if (value && 'object' === typeof value) {\n    return Object.assign({}, value);\n  }\n  return value;\n}\nfunction cloneMessage(data) {\n  var method = data.cloneMethod;\n  if ('shallowCloneDeepObjects' === method) {\n    var clonedData = data;\n    clonedData.payload = shallowCloneDeepObjects(clonedData.payload);\n    return clonedData;\n  } else if ('immutable' === method) {\n    return data;\n  }\n  throw new Error('Unknown data.clone method for cloneMessage');\n}","map":{"version":3,"names":["exports","__esModule","default","cloneMessage","shallowCloneDeepObjects","value","Array","isArray","returned","length","i","len","Object","assign","data","method","cloneMethod","clonedData","payload","Error"],"sources":["/app/node_modules/@nozbe/watermelondb/adapters/lokijs/worker/cloneMessage/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = cloneMessage;\nexports.shallowCloneDeepObjects = shallowCloneDeepObjects;\n// shallow-clones objects (without checking their contents), but copies arrays\nfunction shallowCloneDeepObjects(value) {\n  if (Array.isArray(value)) {\n    var returned = new Array(value.length);\n    for (var i = 0, len = value.length; i < len; i += 1) {\n      returned[i] = shallowCloneDeepObjects(value[i]);\n    }\n    return returned;\n  } else if (value && 'object' === typeof value) {\n    return Object.assign({}, value);\n  }\n  return value;\n}\nfunction cloneMessage(data) {\n  // TODO: Even better, it would be great if we had zero-copy architecture (COW RawRecords?) and we didn't have to clone\n  var method = data.cloneMethod;\n  if ('shallowCloneDeepObjects' === method) {\n    var clonedData = data;\n    clonedData.payload = shallowCloneDeepObjects(clonedData.payload);\n    return clonedData;\n  } else if ('immutable' === method) {\n    // we get a pinky promise that the payload is immutable so we don't need to copy\n    return data;\n  }\n  throw new Error('Unknown data.clone method for cloneMessage');\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAGC,YAAY;AAC9BH,OAAO,CAACI,uBAAuB,GAAGA,uBAAuB;AAEzD,SAASA,uBAAuBA,CAACC,KAAK,EAAE;EACtC,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACxB,IAAIG,QAAQ,GAAG,IAAIF,KAAK,CAACD,KAAK,CAACI,MAAM,CAAC;IACtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGN,KAAK,CAACI,MAAM,EAAEC,CAAC,GAAGC,GAAG,EAAED,CAAC,IAAI,CAAC,EAAE;MACnDF,QAAQ,CAACE,CAAC,CAAC,GAAGN,uBAAuB,CAACC,KAAK,CAACK,CAAC,CAAC,CAAC;IACjD;IACA,OAAOF,QAAQ;EACjB,CAAC,MAAM,IAAIH,KAAK,IAAI,QAAQ,KAAK,OAAOA,KAAK,EAAE;IAC7C,OAAOO,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAER,KAAK,CAAC;EACjC;EACA,OAAOA,KAAK;AACd;AACA,SAASF,YAAYA,CAACW,IAAI,EAAE;EAE1B,IAAIC,MAAM,GAAGD,IAAI,CAACE,WAAW;EAC7B,IAAI,yBAAyB,KAAKD,MAAM,EAAE;IACxC,IAAIE,UAAU,GAAGH,IAAI;IACrBG,UAAU,CAACC,OAAO,GAAGd,uBAAuB,CAACa,UAAU,CAACC,OAAO,CAAC;IAChE,OAAOD,UAAU;EACnB,CAAC,MAAM,IAAI,WAAW,KAAKF,MAAM,EAAE;IAEjC,OAAOD,IAAI;EACb;EACA,MAAM,IAAIK,KAAK,CAAC,4CAA4C,CAAC;AAC/D","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}