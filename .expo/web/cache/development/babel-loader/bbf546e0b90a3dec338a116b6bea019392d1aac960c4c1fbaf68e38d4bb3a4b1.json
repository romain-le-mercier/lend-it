{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createStyles } from \"../../../utils/theme\";\nimport { getStatusColor, getStatusLabel } from \"../../../utils/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var StatusBadge = function StatusBadge(_ref) {\n  var status = _ref.status;\n  var color = getStatusColor(status);\n  var label = getStatusLabel(status);\n  return _jsx(View, {\n    style: [styles.container, {\n      backgroundColor: color + \"20\",\n      borderColor: color\n    }],\n    children: _jsx(Text, {\n      style: [styles.text, {\n        color: color\n      }],\n      children: label\n    })\n  });\n};\nvar styles = createStyles(function (theme) {\n  return {\n    container: {\n      paddingHorizontal: theme.spacing.sm,\n      paddingVertical: theme.spacing.xs / 2,\n      borderRadius: theme.borderRadius.full,\n      borderWidth: 1\n    },\n    text: {\n      fontSize: theme.typography.fontSize.xs,\n      fontWeight: '600'\n    }\n  };\n});","map":{"version":3,"names":["React","View","Text","createStyles","getStatusColor","getStatusLabel","jsx","_jsx","StatusBadge","_ref","status","color","label","style","styles","container","backgroundColor","borderColor","children","text","theme","paddingHorizontal","spacing","sm","paddingVertical","xs","borderRadius","full","borderWidth","fontSize","typography","fontWeight"],"sources":["/app/src/presentation/components/common/StatusBadge.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text } from 'react-native';\nimport { createStyles } from '@/utils/theme';\nimport { getStatusColor, getStatusLabel } from '@/utils/theme';\n\ninterface StatusBadgeProps {\n  status: 'returned' | 'overdue' | 'due_soon' | 'active';\n}\n\nexport const StatusBadge: React.FC<StatusBadgeProps> = ({ status }) => {\n  const color = getStatusColor(status);\n  const label = getStatusLabel(status);\n\n  return (\n    <View style={[styles.container, { backgroundColor: `${color}20`, borderColor: color }]}>\n      <Text style={[styles.text, { color }]}>{label}</Text>\n    </View>\n  );\n};\n\nconst styles = createStyles((theme) => ({\n  container: {\n    paddingHorizontal: theme.spacing.sm,\n    paddingVertical: theme.spacing.xs / 2,\n    borderRadius: theme.borderRadius.full,\n    borderWidth: 1,\n  },\n  text: {\n    fontSize: theme.typography.fontSize.xs,\n    fontWeight: '600',\n  },\n}));"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,YAAY;AACrB,SAASC,cAAc,EAAEC,cAAc;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAM/D,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAAuCA,CAAAC,IAAA,EAAmB;EAAA,IAAbC,MAAM,GAAAD,IAAA,CAANC,MAAM;EAC9D,IAAMC,KAAK,GAAGP,cAAc,CAACM,MAAM,CAAC;EACpC,IAAME,KAAK,GAAGP,cAAc,CAACK,MAAM,CAAC;EAEpC,OACEH,IAAA,CAACN,IAAI;IAACY,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE;MAAEC,eAAe,EAAKL,KAAK,OAAI;MAAEM,WAAW,EAAEN;IAAM,CAAC,CAAE;IAAAO,QAAA,EACrFX,IAAA,CAACL,IAAI;MAACW,KAAK,EAAE,CAACC,MAAM,CAACK,IAAI,EAAE;QAAER,KAAK,EAALA;MAAM,CAAC,CAAE;MAAAO,QAAA,EAAEN;IAAK,CAAO;EAAC,CACjD,CAAC;AAEX,CAAC;AAED,IAAME,MAAM,GAAGX,YAAY,CAAC,UAACiB,KAAK;EAAA,OAAM;IACtCL,SAAS,EAAE;MACTM,iBAAiB,EAAED,KAAK,CAACE,OAAO,CAACC,EAAE;MACnCC,eAAe,EAAEJ,KAAK,CAACE,OAAO,CAACG,EAAE,GAAG,CAAC;MACrCC,YAAY,EAAEN,KAAK,CAACM,YAAY,CAACC,IAAI;MACrCC,WAAW,EAAE;IACf,CAAC;IACDT,IAAI,EAAE;MACJU,QAAQ,EAAET,KAAK,CAACU,UAAU,CAACD,QAAQ,CAACJ,EAAE;MACtCM,UAAU,EAAE;IACd;EACF,CAAC;AAAA,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}