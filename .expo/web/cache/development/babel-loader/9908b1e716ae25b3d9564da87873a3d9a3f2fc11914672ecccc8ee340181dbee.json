{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nfunction createWorker(useWebWorker) {\n  if (useWebWorker) {\n    var LokiWebWorker = require(\"./worker/loki.worker\");\n    return new LokiWebWorker();\n  }\n  var LokiSynchronousWorker = require(\"./worker/synchronousWorker\").default;\n  return new LokiSynchronousWorker();\n}\nvar _actionId = 0;\nfunction nextActionId() {\n  _actionId += 1;\n  return _actionId;\n}\nvar LokiDispatcher = function () {\n  function LokiDispatcher(useWebWorker) {\n    var _this = this;\n    this._pendingCalls = [];\n    this._worker = createWorker(useWebWorker);\n    this._worker.onmessage = function (_ref) {\n      var data = _ref.data;\n      var result = data.result,\n        responseId = data.id;\n      var _this$_pendingCalls$s = _this._pendingCalls.shift(),\n        callback = _this$_pendingCalls$s.callback,\n        id = _this$_pendingCalls$s.id;\n      if (id !== responseId) {\n        callback({\n          error: new Error('Loki worker responses are out of order')\n        });\n        return;\n      }\n      callback(result);\n    };\n  }\n  var _proto = LokiDispatcher.prototype;\n  _proto.call = function call(type) {\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n    var cloneMethod = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'immutable';\n    var returnCloneMethod = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'immutable';\n    var id = nextActionId();\n    this._pendingCalls.push({\n      callback: callback,\n      id: id\n    });\n    this._worker.postMessage({\n      id: id,\n      type: type,\n      payload: payload,\n      cloneMethod: cloneMethod,\n      returnCloneMethod: returnCloneMethod\n    });\n  };\n  return LokiDispatcher;\n}();\nexports.default = LokiDispatcher;","map":{"version":3,"names":["exports","__esModule","default","createWorker","useWebWorker","LokiWebWorker","require","LokiSynchronousWorker","_actionId","nextActionId","LokiDispatcher","_this","_pendingCalls","_worker","onmessage","_ref","data","result","responseId","id","_this$_pendingCalls$s","shift","callback","error","Error","_proto","prototype","call","type","payload","arguments","length","undefined","cloneMethod","returnCloneMethod","push","postMessage"],"sources":["/app/node_modules/@nozbe/watermelondb/adapters/lokijs/dispatcher.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nfunction createWorker(useWebWorker) {\n  if (useWebWorker) {\n    var LokiWebWorker = require('./worker/loki.worker');\n    return new LokiWebWorker();\n  }\n  var LokiSynchronousWorker = require('./worker/synchronousWorker').default;\n  return new LokiSynchronousWorker();\n}\nvar _actionId = 0;\nfunction nextActionId() {\n  _actionId += 1;\n  return _actionId;\n}\nvar LokiDispatcher = /*#__PURE__*/function () {\n  function LokiDispatcher(useWebWorker) {\n    var _this = this;\n    this._pendingCalls = [];\n    this._worker = createWorker(useWebWorker);\n    this._worker.onmessage = function ({\n      data: data\n    }) {\n      var {\n        result: result,\n        id: responseId\n      } = data;\n      var {\n        callback: callback,\n        id: id\n      } = _this._pendingCalls.shift();\n\n      // sanity check\n      if (id !== responseId) {\n        callback({\n          error: new Error('Loki worker responses are out of order')\n        });\n        return;\n      }\n      callback(result);\n    };\n  }\n\n  // TODO: `any` return should be `WorkerResponsePayload`\n  var _proto = LokiDispatcher.prototype;\n  _proto.call = function call(type, payload = [], callback = function () {},\n  // NOTE: This are used when not using web workers (otherwise, the data naturally is just copied)\n  cloneMethod = 'immutable', returnCloneMethod = 'immutable') {\n    var id = nextActionId();\n    this._pendingCalls.push({\n      callback: callback,\n      id: id\n    });\n    this._worker.postMessage({\n      id: id,\n      type: type,\n      payload: payload,\n      cloneMethod: cloneMethod,\n      returnCloneMethod: returnCloneMethod\n    });\n  };\n  return LokiDispatcher;\n}();\nexports.default = LokiDispatcher;"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,SAASC,YAAYA,CAACC,YAAY,EAAE;EAClC,IAAIA,YAAY,EAAE;IAChB,IAAIC,aAAa,GAAGC,OAAO,uBAAuB,CAAC;IACnD,OAAO,IAAID,aAAa,CAAC,CAAC;EAC5B;EACA,IAAIE,qBAAqB,GAAGD,OAAO,6BAA6B,CAAC,CAACJ,OAAO;EACzE,OAAO,IAAIK,qBAAqB,CAAC,CAAC;AACpC;AACA,IAAIC,SAAS,GAAG,CAAC;AACjB,SAASC,YAAYA,CAAA,EAAG;EACtBD,SAAS,IAAI,CAAC;EACd,OAAOA,SAAS;AAClB;AACA,IAAIE,cAAc,GAAgB,YAAY;EAC5C,SAASA,cAAcA,CAACN,YAAY,EAAE;IACpC,IAAIO,KAAK,GAAG,IAAI;IAChB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,OAAO,GAAGV,YAAY,CAACC,YAAY,CAAC;IACzC,IAAI,CAACS,OAAO,CAACC,SAAS,GAAG,UAAAC,IAAA,EAEtB;MAAA,IADKC,IAAI,GAAAD,IAAA,CAAVC,IAAI;MAEJ,IACUC,MAAM,GAEZD,IAAI,CAFNC,MAAM;QACFC,UAAU,GACZF,IAAI,CADNG,EAAE;MAEJ,IAAAC,qBAAA,GAGIT,KAAK,CAACC,aAAa,CAACS,KAAK,CAAC,CAAC;QAFnBC,QAAQ,GAAAF,qBAAA,CAAlBE,QAAQ;QACJH,EAAE,GAAAC,qBAAA,CAAND,EAAE;MAIJ,IAAIA,EAAE,KAAKD,UAAU,EAAE;QACrBI,QAAQ,CAAC;UACPC,KAAK,EAAE,IAAIC,KAAK,CAAC,wCAAwC;QAC3D,CAAC,CAAC;QACF;MACF;MACAF,QAAQ,CAACL,MAAM,CAAC;IAClB,CAAC;EACH;EAGA,IAAIQ,MAAM,GAAGf,cAAc,CAACgB,SAAS;EACrCD,MAAM,CAACE,IAAI,GAAG,SAASA,IAAIA,CAACC,IAAI,EAE4B;IAAA,IAF1BC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAA,IAAER,QAAQ,GAAAQ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,YAAY,CAAC,CAAC;IAAA,IAEzEG,WAAW,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,WAAW;IAAA,IAAEI,iBAAiB,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,WAAW;IACxD,IAAIX,EAAE,GAAGV,YAAY,CAAC,CAAC;IACvB,IAAI,CAACG,aAAa,CAACuB,IAAI,CAAC;MACtBb,QAAQ,EAAEA,QAAQ;MAClBH,EAAE,EAAEA;IACN,CAAC,CAAC;IACF,IAAI,CAACN,OAAO,CAACuB,WAAW,CAAC;MACvBjB,EAAE,EAAEA,EAAE;MACNS,IAAI,EAAEA,IAAI;MACVC,OAAO,EAAEA,OAAO;MAChBI,WAAW,EAAEA,WAAW;MACxBC,iBAAiB,EAAEA;IACrB,CAAC,CAAC;EACJ,CAAC;EACD,OAAOxB,cAAc;AACvB,CAAC,CAAC,CAAC;AACHV,OAAO,CAACE,OAAO,GAAGQ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}