{"ast":null,"code":"import * as yup from 'yup';\nexport var createLentItemSchema = yup.object({\n  itemName: yup.string().trim().required('Item name is required').min(2, 'Item name must be at least 2 characters'),\n  borrowerName: yup.string().trim().required('Borrower name is required').min(2, 'Borrower name must be at least 2 characters'),\n  borrowerContact: yup.string().trim().optional(),\n  lentDate: yup.date().required('Lent date is required').max(new Date(), 'Lent date cannot be in the future'),\n  expectedReturnDate: yup.date().required('Expected return date is required').min(yup.ref('lentDate'), 'Return date must be after lent date'),\n  notes: yup.string().trim().optional(),\n  itemType: yup.string().oneOf(['lent', 'borrowed']).required('Item type is required')\n});\nexport var updateLentItemSchema = yup.object({\n  itemName: yup.string().trim().min(2, 'Item name must be at least 2 characters'),\n  borrowerName: yup.string().trim().min(2, 'Borrower name must be at least 2 characters'),\n  borrowerContact: yup.string().trim().optional(),\n  expectedReturnDate: yup.date(),\n  notes: yup.string().trim().optional()\n});","map":{"version":3,"names":["yup","createLentItemSchema","object","itemName","string","trim","required","min","borrowerName","borrowerContact","optional","lentDate","date","max","Date","expectedReturnDate","ref","notes","itemType","oneOf","updateLentItemSchema"],"sources":["/app/src/utils/validation.ts"],"sourcesContent":["import * as yup from 'yup';\n\nexport const createLentItemSchema = yup.object({\n  itemName: yup\n    .string()\n    .trim()\n    .required('Item name is required')\n    .min(2, 'Item name must be at least 2 characters'),\n  borrowerName: yup\n    .string()\n    .trim()\n    .required('Borrower name is required')\n    .min(2, 'Borrower name must be at least 2 characters'),\n  borrowerContact: yup.string().trim().optional(),\n  lentDate: yup\n    .date()\n    .required('Lent date is required')\n    .max(new Date(), 'Lent date cannot be in the future'),\n  expectedReturnDate: yup\n    .date()\n    .required('Expected return date is required')\n    .min(yup.ref('lentDate'), 'Return date must be after lent date'),\n  notes: yup.string().trim().optional(),\n  itemType: yup.string().oneOf(['lent', 'borrowed'] as const).required('Item type is required'),\n});\n\nexport const updateLentItemSchema = yup.object({\n  itemName: yup\n    .string()\n    .trim()\n    .min(2, 'Item name must be at least 2 characters'),\n  borrowerName: yup\n    .string()\n    .trim()\n    .min(2, 'Borrower name must be at least 2 characters'),\n  borrowerContact: yup.string().trim().optional(),\n  expectedReturnDate: yup.date(),\n  notes: yup.string().trim().optional(),\n});"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,IAAMC,oBAAoB,GAAGD,GAAG,CAACE,MAAM,CAAC;EAC7CC,QAAQ,EAAEH,GAAG,CACVI,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,uBAAuB,CAAC,CACjCC,GAAG,CAAC,CAAC,EAAE,yCAAyC,CAAC;EACpDC,YAAY,EAAER,GAAG,CACdI,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,2BAA2B,CAAC,CACrCC,GAAG,CAAC,CAAC,EAAE,6CAA6C,CAAC;EACxDE,eAAe,EAAET,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC;EAC/CC,QAAQ,EAAEX,GAAG,CACVY,IAAI,CAAC,CAAC,CACNN,QAAQ,CAAC,uBAAuB,CAAC,CACjCO,GAAG,CAAC,IAAIC,IAAI,CAAC,CAAC,EAAE,mCAAmC,CAAC;EACvDC,kBAAkB,EAAEf,GAAG,CACpBY,IAAI,CAAC,CAAC,CACNN,QAAQ,CAAC,kCAAkC,CAAC,CAC5CC,GAAG,CAACP,GAAG,CAACgB,GAAG,CAAC,UAAU,CAAC,EAAE,qCAAqC,CAAC;EAClEC,KAAK,EAAEjB,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC;EACrCQ,QAAQ,EAAElB,GAAG,CAACI,MAAM,CAAC,CAAC,CAACe,KAAK,CAAC,CAAC,MAAM,EAAE,UAAU,CAAU,CAAC,CAACb,QAAQ,CAAC,uBAAuB;AAC9F,CAAC,CAAC;AAEF,OAAO,IAAMc,oBAAoB,GAAGpB,GAAG,CAACE,MAAM,CAAC;EAC7CC,QAAQ,EAAEH,GAAG,CACVI,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,CAAC,CACNE,GAAG,CAAC,CAAC,EAAE,yCAAyC,CAAC;EACpDC,YAAY,EAAER,GAAG,CACdI,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,CAAC,CACNE,GAAG,CAAC,CAAC,EAAE,6CAA6C,CAAC;EACxDE,eAAe,EAAET,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC;EAC/CK,kBAAkB,EAAEf,GAAG,CAACY,IAAI,CAAC,CAAC;EAC9BK,KAAK,EAAEjB,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACK,QAAQ,CAAC;AACtC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}