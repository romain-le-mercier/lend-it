{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { HomeScreen } from \"./src/presentation/screens/HomeScreen\";\nimport { ItemDetailScreen } from \"./src/presentation/screens/ItemDetailScreen\";\nimport { EditItemScreen } from \"./src/presentation/screens/EditItemScreen\";\nimport { theme } from \"./src/constants/theme\";\nimport { useNotifications } from \"./src/presentation/hooks/useNotifications\";\nimport { initI18n } from \"./src/i18n\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isI18nInitialized = _useState2[0],\n    setIsI18nInitialized = _useState2[1];\n  useNotifications();\n  useEffect(function () {\n    initI18n().then(function () {\n      setIsI18nInitialized(true);\n    });\n  }, []);\n  if (!isI18nInitialized) {\n    return null;\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\",\n      backgroundColor: theme.colors.background.dark\n    }), _jsx(NavigationContainer, {\n      theme: {\n        dark: true,\n        colors: {\n          primary: theme.colors.primary.green,\n          background: theme.colors.background.dark,\n          card: theme.colors.background.card,\n          text: theme.colors.text.primary,\n          border: theme.colors.border.default,\n          notification: theme.colors.primary.purple\n        }\n      },\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false,\n          contentStyle: {\n            backgroundColor: theme.colors.background.dark\n          },\n          animation: 'slide_from_right',\n          animationDuration: 250\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"ItemDetail\",\n          component: ItemDetailScreen,\n          options: {\n            presentation: 'card',\n            animation: 'slide_from_right'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"EditItem\",\n          component: EditItemScreen,\n          options: {\n            presentation: 'modal',\n            animation: 'slide_from_bottom'\n          }\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","StatusBar","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","HomeScreen","ItemDetailScreen","EditItemScreen","theme","useNotifications","initI18n","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","App","_useState","_useState2","_slicedToArray","isI18nInitialized","setIsI18nInitialized","then","children","style","backgroundColor","colors","background","dark","primary","green","card","text","border","default","notification","purple","Navigator","screenOptions","headerShown","contentStyle","animation","animationDuration","Screen","name","component","options","presentation"],"sources":["/app/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { HomeScreen } from '@/presentation/screens/HomeScreen';\nimport { ItemDetailScreen } from '@/presentation/screens/ItemDetailScreen';\nimport { EditItemScreen } from '@/presentation/screens/EditItemScreen';\nimport { theme } from '@/constants/theme';\nimport { useNotifications } from '@/presentation/hooks/useNotifications';\nimport { initI18n } from '@/i18n';\nimport { useTranslation } from 'react-i18next';\n\nexport type RootStackParamList = {\n  Home: undefined;\n  ItemDetail: { item: any };\n  EditItem: { item: any };\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  const [isI18nInitialized, setIsI18nInitialized] = useState(false);\n  \n  // Initialize notifications\n  useNotifications();\n  \n  // Initialize i18n\n  useEffect(() => {\n    initI18n().then(() => {\n      setIsI18nInitialized(true);\n    });\n  }, []);\n  \n  if (!isI18nInitialized) {\n    return null; // Or a loading screen\n  }\n\n  return (\n    <>\n      <StatusBar style=\"light\" backgroundColor={theme.colors.background.dark} />\n      <NavigationContainer\n        theme={{\n          dark: true,\n          colors: {\n            primary: theme.colors.primary.green,\n            background: theme.colors.background.dark,\n            card: theme.colors.background.card,\n            text: theme.colors.text.primary,\n            border: theme.colors.border.default,\n            notification: theme.colors.primary.purple,\n          },\n        }}\n      >\n        <Stack.Navigator\n          screenOptions={{\n            headerShown: false,\n            contentStyle: {\n              backgroundColor: theme.colors.background.dark,\n            },\n            animation: 'slide_from_right',\n            animationDuration: 250,\n          }}\n        >\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen \n            name=\"ItemDetail\" \n            component={ItemDetailScreen}\n            options={{\n              presentation: 'card',\n              animation: 'slide_from_right',\n            }}\n          />\n          <Stack.Screen \n            name=\"EditItem\" \n            component={EditItemScreen}\n            options={{\n              presentation: 'modal',\n              animation: 'slide_from_bottom',\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}