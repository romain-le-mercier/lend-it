{"ast":null,"code":"import { format as dateFnsFormat } from 'date-fns';\nimport { enUS, fr, de, es, nl } from 'date-fns/locale';\nimport i18n from \"../i18n\";\nvar locales = {\n  en: enUS,\n  fr: fr,\n  de: de,\n  es: es,\n  nl: nl\n};\nexport var format = function format(date, formatStr) {\n  var currentLanguage = i18n.language;\n  var locale = locales[currentLanguage] || enUS;\n  return dateFnsFormat(date, formatStr, {\n    locale: locale\n  });\n};\nexport var DATE_FORMATS = {\n  SHORT: 'MMM dd',\n  MEDIUM: 'MMM dd, yyyy',\n  LONG: 'MMMM dd, yyyy',\n  INPUT: 'yyyy-MM-dd'\n};","map":{"version":3,"names":["format","dateFnsFormat","enUS","fr","de","es","nl","i18n","locales","en","date","formatStr","currentLanguage","language","locale","DATE_FORMATS","SHORT","MEDIUM","LONG","INPUT"],"sources":["/app/src/utils/dateFormat.ts"],"sourcesContent":["import { format as dateFnsFormat } from 'date-fns';\nimport { enUS, fr, de, es, nl } from 'date-fns/locale';\nimport i18n from '@/i18n';\n\nconst locales = {\n  en: enUS,\n  fr: fr,\n  de: de,\n  es: es,\n  nl: nl,\n};\n\nexport const format = (date: Date | number, formatStr: string): string => {\n  const currentLanguage = i18n.language;\n  const locale = locales[currentLanguage as keyof typeof locales] || enUS;\n  \n  return dateFnsFormat(date, formatStr, { locale });\n};\n\n// Common date formats\nexport const DATE_FORMATS = {\n  SHORT: 'MMM dd',\n  MEDIUM: 'MMM dd, yyyy',\n  LONG: 'MMMM dd, yyyy',\n  INPUT: 'yyyy-MM-dd',\n};"],"mappings":"AAAA,SAASA,MAAM,IAAIC,aAAa,QAAQ,UAAU;AAClD,SAASC,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,QAAQ,iBAAiB;AACtD,OAAOC,IAAI;AAEX,IAAMC,OAAO,GAAG;EACdC,EAAE,EAAEP,IAAI;EACRC,EAAE,EAAEA,EAAE;EACNC,EAAE,EAAEA,EAAE;EACNC,EAAE,EAAEA,EAAE;EACNC,EAAE,EAAEA;AACN,CAAC;AAED,OAAO,IAAMN,MAAM,GAAG,SAATA,MAAMA,CAAIU,IAAmB,EAAEC,SAAiB,EAAa;EACxE,IAAMC,eAAe,GAAGL,IAAI,CAACM,QAAQ;EACrC,IAAMC,MAAM,GAAGN,OAAO,CAACI,eAAe,CAAyB,IAAIV,IAAI;EAEvE,OAAOD,aAAa,CAACS,IAAI,EAAEC,SAAS,EAAE;IAAEG,MAAM,EAANA;EAAO,CAAC,CAAC;AACnD,CAAC;AAGD,OAAO,IAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAE,QAAQ;EACfC,MAAM,EAAE,cAAc;EACtBC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;AACT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}