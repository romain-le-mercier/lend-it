{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useEffect, useRef } from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { NotificationService } from \"../../infrastructure/notifications/NotificationService\";\nexport var useNotifications = function useNotifications() {\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  var notificationService = new NotificationService();\n  useEffect(function () {\n    notificationService.requestPermissions();\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      console.log('Notification received:', notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      var _response$notificatio;\n      var itemId = (_response$notificatio = response.notification.request.content.data) == null ? void 0 : _response$notificatio.itemId;\n      if (itemId) {\n        console.log('Navigate to item:', itemId);\n      }\n    });\n    return function () {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n    };\n  }, []);\n  var scheduleNotificationForItem = function () {\n    var _ref = _asyncToGenerator(function* (item) {\n      try {\n        var notificationId = yield notificationService.scheduleOverdueNotification(item);\n        return notificationId;\n      } catch (error) {\n        console.error('Failed to schedule notification:', error);\n        throw error;\n      }\n    });\n    return function scheduleNotificationForItem(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return {\n    scheduleNotificationForItem: scheduleNotificationForItem,\n    cancelNotification: notificationService.cancelNotification,\n    cancelAllNotifications: notificationService.cancelAllNotifications\n  };\n};","map":{"version":3,"names":["useEffect","useRef","Notifications","NotificationService","useNotifications","notificationListener","responseListener","notificationService","requestPermissions","current","addNotificationReceivedListener","notification","console","log","addNotificationResponseReceivedListener","response","_response$notificatio","itemId","request","content","data","removeNotificationSubscription","scheduleNotificationForItem","_ref","_asyncToGenerator","item","notificationId","scheduleOverdueNotification","error","_x","apply","arguments","cancelNotification","cancelAllNotifications"],"sources":["/app/src/presentation/hooks/useNotifications.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { NotificationService } from '@/infrastructure/notifications/NotificationService';\nimport { container } from '@/infrastructure/di/container';\n\nexport const useNotifications = () => {\n  const notificationListener = useRef<any>();\n  const responseListener = useRef<any>();\n  const notificationService = new NotificationService();\n\n  useEffect(() => {\n    // Request permissions on mount\n    notificationService.requestPermissions();\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n      console.log('Notification received:', notification);\n    });\n\n    // This listener is fired whenever a user taps on or interacts with a notification\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n      const itemId = response.notification.request.content.data?.itemId;\n      if (itemId) {\n        // TODO: Navigate to item details\n        console.log('Navigate to item:', itemId);\n      }\n    });\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n    };\n  }, []);\n\n  const scheduleNotificationForItem = async (item: any) => {\n    try {\n      const notificationId = await notificationService.scheduleOverdueNotification(item);\n      return notificationId;\n    } catch (error) {\n      console.error('Failed to schedule notification:', error);\n      throw error;\n    }\n  };\n\n  return {\n    scheduleNotificationForItem,\n    cancelNotification: notificationService.cancelNotification,\n    cancelAllNotifications: notificationService.cancelAllNotifications,\n  };\n};"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AACnD,SAASC,mBAAmB;AAG5B,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EACpC,IAAMC,oBAAoB,GAAGJ,MAAM,CAAM,CAAC;EAC1C,IAAMK,gBAAgB,GAAGL,MAAM,CAAM,CAAC;EACtC,IAAMM,mBAAmB,GAAG,IAAIJ,mBAAmB,CAAC,CAAC;EAErDH,SAAS,CAAC,YAAM;IAEdO,mBAAmB,CAACC,kBAAkB,CAAC,CAAC;IAGxCH,oBAAoB,CAACI,OAAO,GAAGP,aAAa,CAACQ,+BAA+B,CAAC,UAAAC,YAAY,EAAI;MAC3FC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,YAAY,CAAC;IACrD,CAAC,CAAC;IAGFL,gBAAgB,CAACG,OAAO,GAAGP,aAAa,CAACY,uCAAuC,CAAC,UAAAC,QAAQ,EAAI;MAAA,IAAAC,qBAAA;MAC3F,IAAMC,MAAM,IAAAD,qBAAA,GAAGD,QAAQ,CAACJ,YAAY,CAACO,OAAO,CAACC,OAAO,CAACC,IAAI,qBAA1CJ,qBAAA,CAA4CC,MAAM;MACjE,IAAIA,MAAM,EAAE;QAEVL,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,MAAM,CAAC;MAC1C;IACF,CAAC,CAAC;IAEF,OAAO,YAAM;MACX,IAAIZ,oBAAoB,CAACI,OAAO,EAAE;QAChCP,aAAa,CAACmB,8BAA8B,CAAChB,oBAAoB,CAACI,OAAO,CAAC;MAC5E;MACA,IAAIH,gBAAgB,CAACG,OAAO,EAAE;QAC5BP,aAAa,CAACmB,8BAA8B,CAACf,gBAAgB,CAACG,OAAO,CAAC;MACxE;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMa,2BAA2B;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAS,EAAK;MACvD,IAAI;QACF,IAAMC,cAAc,SAASnB,mBAAmB,CAACoB,2BAA2B,CAACF,IAAI,CAAC;QAClF,OAAOC,cAAc;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdhB,OAAO,CAACgB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxD,MAAMA,KAAK;MACb;IACF,CAAC;IAAA,gBARKN,2BAA2BA,CAAAO,EAAA;MAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQhC;EAED,OAAO;IACLT,2BAA2B,EAA3BA,2BAA2B;IAC3BU,kBAAkB,EAAEzB,mBAAmB,CAACyB,kBAAkB;IAC1DC,sBAAsB,EAAE1B,mBAAmB,CAAC0B;EAC9C,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}