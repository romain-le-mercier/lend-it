{"ast":null,"code":"\"use strict\";\n\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { CURRENCIES, USES_FAHRENHEIT, USES_IMPERIAL, USES_RTL_LAYOUT } from \"./constants\";\nfunction ensureCountryCode(countryCode) {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\nfunction splitLanguageTag(languageTag) {\n  var _languageTag$split = languageTag.split(\"-\"),\n    _languageTag$split2 = _slicedToArray(_languageTag$split, 2),\n    _languageTag$split2$ = _languageTag$split2[0],\n    languageCode = _languageTag$split2$ === void 0 ? \"en\" : _languageTag$split2$,\n    countryCode = _languageTag$split2[1];\n  return {\n    languageCode: languageCode,\n    countryCode: countryCode\n  };\n}\nfunction convertLanguageTagToLocale(languageTag, countryCodeFallback) {\n  var _splitLanguageTag = splitLanguageTag(languageTag),\n    languageCode = _splitLanguageTag.languageCode,\n    countryCode = _splitLanguageTag.countryCode;\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n  return {\n    languageCode: languageCode,\n    countryCode: countryCode,\n    languageTag: languageCode + \"-\" + countryCode,\n    isRTL: USES_RTL_LAYOUT.includes(languageCode)\n  };\n}\nfunction getCurrentLocale() {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\nexport function getCalendar() {\n  return \"gregorian\";\n}\nexport function getCountry() {\n  var _navigator = navigator,\n    _navigator$languages = _navigator.languages,\n    languages = _navigator$languages === void 0 ? [navigator.language] : _navigator$languages;\n  for (var i = 0; i < languages.length; i++) {\n    var language = languages[i];\n    if (!language) {\n      continue;\n    }\n    var _splitLanguageTag2 = splitLanguageTag(language),\n      countryCode = _splitLanguageTag2.countryCode;\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n  return \"US\";\n}\nexport function getCurrencies() {\n  var _navigator2 = navigator,\n    _navigator2$languages = _navigator2.languages,\n    languages = _navigator2$languages === void 0 ? [navigator.language] : _navigator2$languages;\n  var currencies = [];\n  languages.forEach(function (language) {\n    var _splitLanguageTag3 = splitLanguageTag(language),\n      countryCode = _splitLanguageTag3.countryCode;\n    if (countryCode) {\n      var currency = CURRENCIES[ensureCountryCode(countryCode)];\n      if (currency && currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n  return currencies;\n}\nexport function getLocales() {\n  var _navigator3 = navigator,\n    _navigator3$languages = _navigator3.languages,\n    languages = _navigator3$languages === void 0 ? [navigator.language] : _navigator3$languages;\n  var countryCode = getCountry();\n  var cache = [];\n  var locales = [];\n  languages.forEach(function (language) {\n    var locale = convertLanguageTagToLocale(language, countryCode);\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n  return locales;\n}\nexport function getNumberFormatSettings() {\n  var _getCurrentLocale = getCurrentLocale(),\n    languageTag = _getCurrentLocale.languageTag;\n  var formatter = new Intl.NumberFormat(languageTag);\n  var separators = formatter.format(1000000.1).replace(/\\d/g, \"\");\n  return {\n    decimalSeparator: separators[separators.length - 1] || \".\",\n    groupingSeparator: separators[0] || \",\"\n  };\n}\nexport function getTemperatureUnit() {\n  return USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\nexport function getTimeZone() {\n  var _getCurrentLocale2 = getCurrentLocale(),\n    languageTag = _getCurrentLocale2.languageTag;\n  var formatter = new Intl.DateTimeFormat(languageTag, {\n    hour: \"numeric\"\n  });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\nexport function uses24HourClock() {\n  var _getCurrentLocale3 = getCurrentLocale(),\n    languageTag = _getCurrentLocale3.languageTag;\n  var formatter = new Intl.DateTimeFormat(languageTag, {\n    hour: \"numeric\"\n  });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\nexport function usesMetricSystem() {\n  return !USES_IMPERIAL.includes(getCountry());\n}\nexport function usesAutoDateAndTime() {\n  return;\n}\nexport function usesAutoTimeZone() {\n  return;\n}\nexport function openAppLanguageSettings() {\n  return _openAppLanguageSettings.apply(this, arguments);\n}\nfunction _openAppLanguageSettings() {\n  _openAppLanguageSettings = _asyncToGenerator(function* () {\n    throw new Error(\"openAppLanguageSettings is supported only on Android 13+\");\n  });\n  return _openAppLanguageSettings.apply(this, arguments);\n}","map":{"version":3,"names":["CURRENCIES","USES_FAHRENHEIT","USES_IMPERIAL","USES_RTL_LAYOUT","ensureCountryCode","countryCode","toUpperCase","splitLanguageTag","languageTag","_languageTag$split","split","_languageTag$split2","_slicedToArray","_languageTag$split2$","languageCode","convertLanguageTagToLocale","countryCodeFallback","_splitLanguageTag","toLowerCase","isRTL","includes","getCurrentLocale","navigator","language","getCountry","getCalendar","_navigator","_navigator$languages","languages","i","length","_splitLanguageTag2","getCurrencies","_navigator2","_navigator2$languages","currencies","forEach","_splitLanguageTag3","currency","indexOf","push","getLocales","_navigator3","_navigator3$languages","cache","locales","locale","getNumberFormatSettings","_getCurrentLocale","formatter","Intl","NumberFormat","separators","format","replace","decimalSeparator","groupingSeparator","getTemperatureUnit","getTimeZone","_getCurrentLocale2","DateTimeFormat","hour","resolvedOptions","timeZone","uses24HourClock","_getCurrentLocale3","Date","match","usesMetricSystem","usesAutoDateAndTime","usesAutoTimeZone","openAppLanguageSettings","_openAppLanguageSettings","apply","arguments","_asyncToGenerator","Error"],"sources":["/app/node_modules/react-native-localize/src/module.web.ts"],"sourcesContent":["import {\n  CURRENCIES,\n  USES_FAHRENHEIT,\n  USES_IMPERIAL,\n  USES_RTL_LAYOUT,\n} from \"./constants\";\nimport type {\n  Calendar,\n  Locale,\n  NumberFormatSettings,\n  TemperatureUnit,\n} from \"./types\";\n\nfunction ensureCountryCode(countryCode: string): string {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\n\nfunction splitLanguageTag(languageTag: string): {\n  languageCode: string;\n  countryCode?: string;\n} {\n  const [languageCode = \"en\", countryCode] = languageTag.split(\"-\");\n  return { languageCode, countryCode };\n}\n\nfunction convertLanguageTagToLocale(\n  languageTag: string,\n  countryCodeFallback: string,\n): Locale {\n  let { languageCode, countryCode } = splitLanguageTag(languageTag);\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n\n  return {\n    languageCode,\n    countryCode,\n    languageTag: `${languageCode}-${countryCode}`,\n    isRTL: USES_RTL_LAYOUT.includes(languageCode),\n  };\n}\n\nfunction getCurrentLocale(): Locale {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\n\nexport function getCalendar(): Calendar {\n  return \"gregorian\";\n}\n\nexport function getCountry(): string {\n  const { languages = [navigator.language] } = navigator;\n\n  for (let i = 0; i < languages.length; i++) {\n    const language = languages[i];\n\n    if (!language) {\n      continue;\n    }\n\n    const { countryCode } = splitLanguageTag(language);\n\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n\n  return \"US\";\n}\n\nexport function getCurrencies(): string[] {\n  const { languages = [navigator.language] } = navigator;\n  const currencies: string[] = [];\n\n  languages.forEach((language) => {\n    const { countryCode } = splitLanguageTag(language);\n\n    if (countryCode) {\n      const currency = CURRENCIES[ensureCountryCode(countryCode)];\n\n      if (currency && currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n\n  return currencies;\n}\n\nexport function getLocales(): Locale[] {\n  const { languages = [navigator.language] } = navigator;\n  const countryCode = getCountry();\n  const cache: string[] = [];\n  const locales: Locale[] = [];\n\n  languages.forEach((language) => {\n    const locale = convertLanguageTagToLocale(language, countryCode);\n\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n\n  return locales;\n}\n\nexport function getNumberFormatSettings(): NumberFormatSettings {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.NumberFormat(languageTag);\n  const separators = formatter.format(1000000.1).replace(/\\d/g, \"\");\n\n  return {\n    decimalSeparator: separators[separators.length - 1] || \".\",\n    groupingSeparator: separators[0] || \",\",\n  };\n}\n\nexport function getTemperatureUnit(): TemperatureUnit {\n  return USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\n\nexport function getTimeZone(): string {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\n\nexport function uses24HourClock(): boolean {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\n\nexport function usesMetricSystem(): boolean {\n  return !USES_IMPERIAL.includes(getCountry());\n}\n\nexport function usesAutoDateAndTime(): boolean | undefined {\n  return;\n}\n\nexport function usesAutoTimeZone(): boolean | undefined {\n  return;\n}\n\nexport async function openAppLanguageSettings(): Promise<void> {\n  throw new Error(\"openAppLanguageSettings is supported only on Android 13+\");\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}