{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { format, DATE_FORMATS } from \"../../../utils/dateFormat\";\nimport { createStyles } from \"../../../utils/theme\";\nimport { WebDateInput } from \"./WebDateInput\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DateTimePicker = null;\nif (Platform.OS !== 'web') {\n  DateTimePicker = require('@react-native-community/datetimepicker').default;\n}\nexport var DatePicker = function DatePicker(_ref) {\n  var label = _ref.label,\n    value = _ref.value,\n    onChange = _ref.onChange,\n    minimumDate = _ref.minimumDate,\n    maximumDate = _ref.maximumDate,\n    error = _ref.error;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  var handleChange = function handleChange(_event, selectedDate) {\n    setShow(Platform.OS === 'ios');\n    if (selectedDate) {\n      onChange(selectedDate);\n    }\n  };\n  var showDatePicker = function showDatePicker() {\n    setShow(true);\n  };\n  if (Platform.OS === 'web') {\n    return _jsx(WebDateInput, {\n      label: label,\n      value: value,\n      onChange: onChange,\n      minimumDate: minimumDate,\n      maximumDate: maximumDate,\n      error: error\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [label && _jsx(Text, {\n      style: styles.label,\n      children: label\n    }), _jsx(TouchableOpacity, {\n      style: [styles.input, error && styles.inputError],\n      onPress: showDatePicker,\n      activeOpacity: 0.7,\n      children: _jsx(Text, {\n        style: styles.dateText,\n        children: format(value, DATE_FORMATS.MEDIUM)\n      })\n    }), error && _jsx(Text, {\n      style: styles.error,\n      children: error\n    }), show && DateTimePicker && _jsx(DateTimePicker, {\n      value: value,\n      mode: \"date\",\n      display: Platform.OS === 'ios' ? 'spinner' : 'default',\n      onChange: handleChange,\n      minimumDate: minimumDate,\n      maximumDate: maximumDate\n    })]\n  });\n};\nvar styles = createStyles(function (theme) {\n  return {\n    container: {\n      marginBottom: theme.spacing.md\n    },\n    label: {\n      fontSize: theme.typography.fontSize.sm,\n      color: theme.colors.text.primary,\n      marginBottom: theme.spacing.xs,\n      fontWeight: '500'\n    },\n    input: {\n      backgroundColor: theme.colors.background.card,\n      borderWidth: 1,\n      borderColor: theme.colors.border.default,\n      borderRadius: theme.borderRadius.md,\n      paddingHorizontal: theme.spacing.md,\n      paddingVertical: theme.spacing.sm,\n      minHeight: 44,\n      justifyContent: 'center'\n    },\n    inputError: {\n      borderColor: theme.colors.status.error\n    },\n    dateText: {\n      fontSize: theme.typography.fontSize.md,\n      color: theme.colors.text.primary\n    },\n    error: {\n      fontSize: theme.typography.fontSize.xs,\n      color: theme.colors.status.error,\n      marginTop: theme.spacing.xs\n    }\n  };\n});","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Platform","format","DATE_FORMATS","createStyles","WebDateInput","jsx","_jsx","jsxs","_jsxs","DateTimePicker","OS","require","default","DatePicker","_ref","label","value","onChange","minimumDate","maximumDate","error","_useState","_useState2","_slicedToArray","show","setShow","handleChange","_event","selectedDate","showDatePicker","style","styles","container","children","input","inputError","onPress","activeOpacity","dateText","MEDIUM","mode","display","theme","marginBottom","spacing","md","fontSize","typography","sm","color","colors","text","primary","xs","fontWeight","backgroundColor","background","card","borderWidth","borderColor","border","borderRadius","paddingHorizontal","paddingVertical","minHeight","justifyContent","status","marginTop"],"sources":["/app/src/presentation/components/common/DatePicker.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Platform,\n} from 'react-native';\nimport { format, DATE_FORMATS } from '@/utils/dateFormat';\nimport { createStyles } from '@/utils/theme';\nimport { WebDateInput } from './WebDateInput';\n\n// Conditionally import DateTimePicker only for native platforms\nlet DateTimePicker: any = null;\nif (Platform.OS !== 'web') {\n  DateTimePicker = require('@react-native-community/datetimepicker').default;\n}\n\ninterface DatePickerProps {\n  label?: string;\n  value: Date;\n  onChange: (date: Date) => void;\n  minimumDate?: Date;\n  maximumDate?: Date;\n  error?: string;\n}\n\nexport const DatePicker: React.FC<DatePickerProps> = ({\n  label,\n  value,\n  onChange,\n  minimumDate,\n  maximumDate,\n  error,\n}) => {\n  const [show, setShow] = useState(false);\n\n  const handleChange = (_event: any, selectedDate?: Date) => {\n    setShow(Platform.OS === 'ios');\n    if (selectedDate) {\n      onChange(selectedDate);\n    }\n  };\n\n  const showDatePicker = () => {\n    setShow(true);\n  };\n\n  // For web, use custom web date input\n  if (Platform.OS === 'web') {\n    return (\n      <WebDateInput\n        label={label}\n        value={value}\n        onChange={onChange}\n        minimumDate={minimumDate}\n        maximumDate={maximumDate}\n        error={error}\n      />\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {label && <Text style={styles.label}>{label}</Text>}\n      <TouchableOpacity\n        style={[styles.input, error && styles.inputError]}\n        onPress={showDatePicker}\n        activeOpacity={0.7}\n      >\n        <Text style={styles.dateText}>{format(value, DATE_FORMATS.MEDIUM)}</Text>\n      </TouchableOpacity>\n      {error && <Text style={styles.error}>{error}</Text>}\n      \n      {show && DateTimePicker && (\n        <DateTimePicker\n          value={value}\n          mode=\"date\"\n          display={Platform.OS === 'ios' ? 'spinner' : 'default'}\n          onChange={handleChange}\n          minimumDate={minimumDate}\n          maximumDate={maximumDate}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = createStyles((theme) => ({\n  container: {\n    marginBottom: theme.spacing.md,\n  },\n  label: {\n    fontSize: theme.typography.fontSize.sm,\n    color: theme.colors.text.primary,\n    marginBottom: theme.spacing.xs,\n    fontWeight: '500',\n  },\n  input: {\n    backgroundColor: theme.colors.background.card,\n    borderWidth: 1,\n    borderColor: theme.colors.border.default,\n    borderRadius: theme.borderRadius.md,\n    paddingHorizontal: theme.spacing.md,\n    paddingVertical: theme.spacing.sm,\n    minHeight: 44,\n    justifyContent: 'center',\n  },\n  inputError: {\n    borderColor: theme.colors.status.error,\n  },\n  dateText: {\n    fontSize: theme.typography.fontSize.md,\n    color: theme.colors.text.primary,\n  },\n  error: {\n    fontSize: theme.typography.fontSize.xs,\n    color: theme.colors.status.error,\n    marginTop: theme.spacing.xs,\n  },\n}));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}