{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { HomeScreen } from \"./src/presentation/screens/HomeScreen\";\nimport { ItemDetailScreen } from \"./src/presentation/screens/ItemDetailScreen\";\nimport { EditItemScreen } from \"./src/presentation/screens/EditItemScreen\";\nimport { SettingsScreen } from \"./src/presentation/screens/SettingsScreen\";\nimport { theme } from \"./src/constants/theme\";\nimport { useNotifications } from \"./src/presentation/hooks/useNotifications\";\nimport { initI18n } from \"./src/i18n\";\nimport { useTranslation } from 'react-i18next';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isI18nInitialized = _useState2[0],\n    setIsI18nInitialized = _useState2[1];\n  useNotifications();\n  useEffect(function () {\n    initI18n().then(function () {\n      setIsI18nInitialized(true);\n    });\n  }, []);\n  if (!isI18nInitialized) {\n    return null;\n  }\n  var HomeTabs = function HomeTabs() {\n    var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n    return _jsxs(Tab.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        tabBarStyle: {\n          backgroundColor: theme.colors.background.card,\n          borderTopColor: theme.colors.border.default,\n          paddingBottom: 5,\n          paddingTop: 5,\n          height: 60\n        },\n        tabBarActiveTintColor: theme.colors.primary.green,\n        tabBarInactiveTintColor: theme.colors.text.secondary\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          tabBarLabel: t('home.title'),\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(Ionicons, {\n              name: \"home\",\n              size: size,\n              color: color\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen,\n        options: {\n          tabBarLabel: t('settings.title'),\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            return _jsx(Ionicons, {\n              name: \"settings\",\n              size: size,\n              color: color\n            });\n          }\n        }\n      })]\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\",\n      backgroundColor: theme.colors.background.dark\n    }), _jsx(NavigationContainer, {\n      theme: {\n        dark: true,\n        colors: {\n          primary: theme.colors.primary.green,\n          background: theme.colors.background.dark,\n          card: theme.colors.background.card,\n          text: theme.colors.text.primary,\n          border: theme.colors.border.default,\n          notification: theme.colors.primary.purple\n        }\n      },\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false,\n          contentStyle: {\n            backgroundColor: theme.colors.background.dark\n          },\n          animation: 'slide_from_right',\n          animationDuration: 250\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"HomeTabs\",\n          component: HomeTabs\n        }), _jsx(Stack.Screen, {\n          name: \"ItemDetail\",\n          component: ItemDetailScreen,\n          options: {\n            presentation: 'card',\n            animation: 'slide_from_right'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"EditItem\",\n          component: EditItemScreen,\n          options: {\n            presentation: 'modal',\n            animation: 'slide_from_bottom'\n          }\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","StatusBar","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","HomeScreen","ItemDetailScreen","EditItemScreen","SettingsScreen","theme","useNotifications","initI18n","useTranslation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","App","_useState","_useState2","_slicedToArray","isI18nInitialized","setIsI18nInitialized","then","HomeTabs","_useTranslation","t","Navigator","screenOptions","headerShown","tabBarStyle","backgroundColor","colors","background","card","borderTopColor","border","default","paddingBottom","paddingTop","height","tabBarActiveTintColor","primary","green","tabBarInactiveTintColor","text","secondary","children","Screen","name","component","options","tabBarLabel","tabBarIcon","_ref","color","size","_ref2","style","dark","notification","purple","contentStyle","animation","animationDuration","presentation"],"sources":["/app/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { HomeScreen } from '@/presentation/screens/HomeScreen';\nimport { ItemDetailScreen } from '@/presentation/screens/ItemDetailScreen';\nimport { EditItemScreen } from '@/presentation/screens/EditItemScreen';\nimport { SettingsScreen } from '@/presentation/screens/SettingsScreen';\nimport { theme } from '@/constants/theme';\nimport { useNotifications } from '@/presentation/hooks/useNotifications';\nimport { initI18n } from '@/i18n';\nimport { useTranslation } from 'react-i18next';\n\nexport type RootStackParamList = {\n  HomeTabs: undefined;\n  ItemDetail: { item: any };\n  EditItem: { item: any };\n};\n\nexport type TabParamList = {\n  Home: undefined;\n  Settings: undefined;\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\nconst Tab = createBottomTabNavigator<TabParamList>();\n\nexport default function App() {\n  const [isI18nInitialized, setIsI18nInitialized] = useState(false);\n  \n  // Initialize notifications\n  useNotifications();\n  \n  // Initialize i18n\n  useEffect(() => {\n    initI18n().then(() => {\n      setIsI18nInitialized(true);\n    });\n  }, []);\n  \n  if (!isI18nInitialized) {\n    return null; // Or a loading screen\n  }\n\n  const HomeTabs = () => {\n    const { t } = useTranslation();\n    \n    return (\n      <Tab.Navigator\n        screenOptions={{\n          headerShown: false,\n          tabBarStyle: {\n            backgroundColor: theme.colors.background.card,\n            borderTopColor: theme.colors.border.default,\n            paddingBottom: 5,\n            paddingTop: 5,\n            height: 60,\n          },\n          tabBarActiveTintColor: theme.colors.primary.green,\n          tabBarInactiveTintColor: theme.colors.text.secondary,\n        }}\n      >\n        <Tab.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{\n            tabBarLabel: t('home.title'),\n            tabBarIcon: ({ color, size }) => (\n              <Ionicons name=\"home\" size={size} color={color} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Settings\"\n          component={SettingsScreen}\n          options={{\n            tabBarLabel: t('settings.title'),\n            tabBarIcon: ({ color, size }) => (\n              <Ionicons name=\"settings\" size={size} color={color} />\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    );\n  };\n\n  return (\n    <>\n      <StatusBar style=\"light\" backgroundColor={theme.colors.background.dark} />\n      <NavigationContainer\n        theme={{\n          dark: true,\n          colors: {\n            primary: theme.colors.primary.green,\n            background: theme.colors.background.dark,\n            card: theme.colors.background.card,\n            text: theme.colors.text.primary,\n            border: theme.colors.border.default,\n            notification: theme.colors.primary.purple,\n          },\n        }}\n      >\n        <Stack.Navigator\n          screenOptions={{\n            headerShown: false,\n            contentStyle: {\n              backgroundColor: theme.colors.background.dark,\n            },\n            animation: 'slide_from_right',\n            animationDuration: 250,\n          }}\n        >\n          <Stack.Screen name=\"HomeTabs\" component={HomeTabs} />\n          <Stack.Screen \n            name=\"ItemDetail\" \n            component={ItemDetailScreen}\n            options={{\n              presentation: 'card',\n              animation: 'slide_from_right',\n            }}\n          />\n          <Stack.Screen \n            name=\"EditItem\" \n            component={EditItemScreen}\n            options={{\n              presentation: 'modal',\n              animation: 'slide_from_bottom',\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,UAAU;AACnB,SAASC,gBAAgB;AACzB,SAASC,cAAc;AACvB,SAASC,cAAc;AACvB,SAASC,KAAK;AACd,SAASC,gBAAgB;AACzB,SAASC,QAAQ;AACjB,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AAa/C,IAAMC,KAAK,GAAGjB,0BAA0B,CAAqB,CAAC;AAC9D,IAAMkB,GAAG,GAAGjB,wBAAwB,CAAe,CAAC;AAEpD,eAAe,SAASkB,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAkDvB,QAAQ,CAAC,KAAK,CAAC;IAAAwB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1DG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAG9Cb,gBAAgB,CAAC,CAAC;EAGlBZ,SAAS,CAAC,YAAM;IACda,QAAQ,CAAC,CAAC,CAACgB,IAAI,CAAC,YAAM;MACpBD,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACD,iBAAiB,EAAE;IACtB,OAAO,IAAI;EACb;EAEA,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrB,IAAAC,eAAA,GAAcjB,cAAc,CAAC,CAAC;MAAtBkB,CAAC,GAAAD,eAAA,CAADC,CAAC;IAET,OACEd,KAAA,CAACI,GAAG,CAACW,SAAS;MACZC,aAAa,EAAE;QACbC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE;UACXC,eAAe,EAAE1B,KAAK,CAAC2B,MAAM,CAACC,UAAU,CAACC,IAAI;UAC7CC,cAAc,EAAE9B,KAAK,CAAC2B,MAAM,CAACI,MAAM,CAACC,OAAO;UAC3CC,aAAa,EAAE,CAAC;UAChBC,UAAU,EAAE,CAAC;UACbC,MAAM,EAAE;QACV,CAAC;QACDC,qBAAqB,EAAEpC,KAAK,CAAC2B,MAAM,CAACU,OAAO,CAACC,KAAK;QACjDC,uBAAuB,EAAEvC,KAAK,CAAC2B,MAAM,CAACa,IAAI,CAACC;MAC7C,CAAE;MAAAC,QAAA,GAEFrC,IAAA,CAACM,GAAG,CAACgC,MAAM;QACTC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEjD,UAAW;QACtBkD,OAAO,EAAE;UACPC,WAAW,EAAE1B,CAAC,CAAC,YAAY,CAAC;UAC5B2B,UAAU,EAAE,SAAZA,UAAUA,CAAAC,IAAA;YAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;YAAA,OACxB9C,IAAA,CAACV,QAAQ;cAACiD,IAAI,EAAC,MAAM;cAACO,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAAA;QAEtD;MAAE,CACH,CAAC,EACF7C,IAAA,CAACM,GAAG,CAACgC,MAAM;QACTC,IAAI,EAAC,UAAU;QACfC,SAAS,EAAE9C,cAAe;QAC1B+C,OAAO,EAAE;UACPC,WAAW,EAAE1B,CAAC,CAAC,gBAAgB,CAAC;UAChC2B,UAAU,EAAE,SAAZA,UAAUA,CAAAI,KAAA;YAAA,IAAKF,KAAK,GAAAE,KAAA,CAALF,KAAK;cAAEC,IAAI,GAAAC,KAAA,CAAJD,IAAI;YAAA,OACxB9C,IAAA,CAACV,QAAQ;cAACiD,IAAI,EAAC,UAAU;cAACO,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAAA;QAE1D;MAAE,CACH,CAAC;IAAA,CACW,CAAC;EAEpB,CAAC;EAED,OACE3C,KAAA,CAAAE,SAAA;IAAAiC,QAAA,GACErC,IAAA,CAACd,SAAS;MAAC8D,KAAK,EAAC,OAAO;MAAC3B,eAAe,EAAE1B,KAAK,CAAC2B,MAAM,CAACC,UAAU,CAAC0B;IAAK,CAAE,CAAC,EAC1EjD,IAAA,CAACb,mBAAmB;MAClBQ,KAAK,EAAE;QACLsD,IAAI,EAAE,IAAI;QACV3B,MAAM,EAAE;UACNU,OAAO,EAAErC,KAAK,CAAC2B,MAAM,CAACU,OAAO,CAACC,KAAK;UACnCV,UAAU,EAAE5B,KAAK,CAAC2B,MAAM,CAACC,UAAU,CAAC0B,IAAI;UACxCzB,IAAI,EAAE7B,KAAK,CAAC2B,MAAM,CAACC,UAAU,CAACC,IAAI;UAClCW,IAAI,EAAExC,KAAK,CAAC2B,MAAM,CAACa,IAAI,CAACH,OAAO;UAC/BN,MAAM,EAAE/B,KAAK,CAAC2B,MAAM,CAACI,MAAM,CAACC,OAAO;UACnCuB,YAAY,EAAEvD,KAAK,CAAC2B,MAAM,CAACU,OAAO,CAACmB;QACrC;MACF,CAAE;MAAAd,QAAA,EAEFnC,KAAA,CAACG,KAAK,CAACY,SAAS;QACdC,aAAa,EAAE;UACbC,WAAW,EAAE,KAAK;UAClBiC,YAAY,EAAE;YACZ/B,eAAe,EAAE1B,KAAK,CAAC2B,MAAM,CAACC,UAAU,CAAC0B;UAC3C,CAAC;UACDI,SAAS,EAAE,kBAAkB;UAC7BC,iBAAiB,EAAE;QACrB,CAAE;QAAAjB,QAAA,GAEFrC,IAAA,CAACK,KAAK,CAACiC,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,SAAS,EAAE1B;QAAS,CAAE,CAAC,EACrDd,IAAA,CAACK,KAAK,CAACiC,MAAM;UACXC,IAAI,EAAC,YAAY;UACjBC,SAAS,EAAEhD,gBAAiB;UAC5BiD,OAAO,EAAE;YACPc,YAAY,EAAE,MAAM;YACpBF,SAAS,EAAE;UACb;QAAE,CACH,CAAC,EACFrD,IAAA,CAACK,KAAK,CAACiC,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAE/C,cAAe;UAC1BgD,OAAO,EAAE;YACPc,YAAY,EAAE,OAAO;YACrBF,SAAS,EAAE;UACb;QAAE,CACH,CAAC;MAAA,CACa;IAAC,CACC,CAAC;EAAA,CACtB,CAAC;AAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}