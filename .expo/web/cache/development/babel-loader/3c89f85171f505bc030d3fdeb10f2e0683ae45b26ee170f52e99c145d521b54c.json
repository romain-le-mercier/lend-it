{"ast":null,"code":"import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { HomeScreen } from \"./src/presentation/screens/HomeScreen\";\nimport { ItemDetailScreen } from \"./src/presentation/screens/ItemDetailScreen\";\nimport { theme } from \"./src/constants/theme\";\nimport { useNotifications } from \"./src/presentation/hooks/useNotifications\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  useNotifications();\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\",\n      backgroundColor: theme.colors.background.dark\n    }), _jsx(NavigationContainer, {\n      theme: {\n        dark: true,\n        colors: {\n          primary: theme.colors.primary.green,\n          background: theme.colors.background.dark,\n          card: theme.colors.background.card,\n          text: theme.colors.text.primary,\n          border: theme.colors.border.default,\n          notification: theme.colors.primary.purple\n        }\n      },\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false,\n          contentStyle: {\n            backgroundColor: theme.colors.background.dark\n          },\n          animation: 'slide_from_right',\n          animationDuration: 250\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"ItemDetail\",\n          component: ItemDetailScreen,\n          options: {\n            presentation: 'card',\n            animation: 'slide_from_right'\n          }\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","StatusBar","NavigationContainer","createNativeStackNavigator","HomeScreen","ItemDetailScreen","theme","useNotifications","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","App","children","style","backgroundColor","colors","background","dark","primary","green","card","text","border","default","notification","purple","Navigator","screenOptions","headerShown","contentStyle","animation","animationDuration","Screen","name","component","options","presentation"],"sources":["/app/App.tsx"],"sourcesContent":["import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { HomeScreen } from '@/presentation/screens/HomeScreen';\nimport { ItemDetailScreen } from '@/presentation/screens/ItemDetailScreen';\nimport { theme } from '@/constants/theme';\nimport { useNotifications } from '@/presentation/hooks/useNotifications';\n\nexport type RootStackParamList = {\n  Home: undefined;\n  ItemDetail: { item: any };\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nexport default function App() {\n  // Initialize notifications\n  useNotifications();\n\n  return (\n    <>\n      <StatusBar style=\"light\" backgroundColor={theme.colors.background.dark} />\n      <NavigationContainer\n        theme={{\n          dark: true,\n          colors: {\n            primary: theme.colors.primary.green,\n            background: theme.colors.background.dark,\n            card: theme.colors.background.card,\n            text: theme.colors.text.primary,\n            border: theme.colors.border.default,\n            notification: theme.colors.primary.purple,\n          },\n        }}\n      >\n        <Stack.Navigator\n          screenOptions={{\n            headerShown: false,\n            contentStyle: {\n              backgroundColor: theme.colors.background.dark,\n            },\n            animation: 'slide_from_right',\n            animationDuration: 250,\n          }}\n        >\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen \n            name=\"ItemDetail\" \n            component={ItemDetailScreen}\n            options={{\n              presentation: 'card',\n              animation: 'slide_from_right',\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,UAAU;AACnB,SAASC,gBAAgB;AACzB,SAASC,KAAK;AACd,SAASC,gBAAgB;AAAgD,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AAOzE,IAAMC,KAAK,GAAGX,0BAA0B,CAAqB,CAAC;AAE9D,eAAe,SAASY,GAAGA,CAAA,EAAG;EAE5BR,gBAAgB,CAAC,CAAC;EAElB,OACEI,KAAA,CAAAE,SAAA;IAAAG,QAAA,GACEP,IAAA,CAACR,SAAS;MAACgB,KAAK,EAAC,OAAO;MAACC,eAAe,EAAEZ,KAAK,CAACa,MAAM,CAACC,UAAU,CAACC;IAAK,CAAE,CAAC,EAC1EZ,IAAA,CAACP,mBAAmB;MAClBI,KAAK,EAAE;QACLe,IAAI,EAAE,IAAI;QACVF,MAAM,EAAE;UACNG,OAAO,EAAEhB,KAAK,CAACa,MAAM,CAACG,OAAO,CAACC,KAAK;UACnCH,UAAU,EAAEd,KAAK,CAACa,MAAM,CAACC,UAAU,CAACC,IAAI;UACxCG,IAAI,EAAElB,KAAK,CAACa,MAAM,CAACC,UAAU,CAACI,IAAI;UAClCC,IAAI,EAAEnB,KAAK,CAACa,MAAM,CAACM,IAAI,CAACH,OAAO;UAC/BI,MAAM,EAAEpB,KAAK,CAACa,MAAM,CAACO,MAAM,CAACC,OAAO;UACnCC,YAAY,EAAEtB,KAAK,CAACa,MAAM,CAACG,OAAO,CAACO;QACrC;MACF,CAAE;MAAAb,QAAA,EAEFL,KAAA,CAACG,KAAK,CAACgB,SAAS;QACdC,aAAa,EAAE;UACbC,WAAW,EAAE,KAAK;UAClBC,YAAY,EAAE;YACZf,eAAe,EAAEZ,KAAK,CAACa,MAAM,CAACC,UAAU,CAACC;UAC3C,CAAC;UACDa,SAAS,EAAE,kBAAkB;UAC7BC,iBAAiB,EAAE;QACrB,CAAE;QAAAnB,QAAA,GAEFP,IAAA,CAACK,KAAK,CAACsB,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAElC;QAAW,CAAE,CAAC,EACnDK,IAAA,CAACK,KAAK,CAACsB,MAAM;UACXC,IAAI,EAAC,YAAY;UACjBC,SAAS,EAAEjC,gBAAiB;UAC5BkC,OAAO,EAAE;YACPC,YAAY,EAAE,MAAM;YACpBN,SAAS,EAAE;UACb;QAAE,CACH,CAAC;MAAA,CACa;IAAC,CACC,CAAC;EAAA,CACtB,CAAC;AAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}