{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.asc = exports.and = void 0;\nexports.between = between;\nexports.column = column;\nexports.desc = void 0;\nexports.eq = eq;\nexports.experimentalJoinTables = experimentalJoinTables;\nexports.experimentalNestedJoin = experimentalNestedJoin;\nexports.gt = gt;\nexports.gte = gte;\nexports.includes = includes;\nexports.like = like;\nexports.lt = lt;\nexports.lte = lte;\nexports.notEq = notEq;\nexports.notIn = notIn;\nexports.notLike = notLike;\nexports.on = void 0;\nexports.oneOf = oneOf;\nexports.or = void 0;\nexports.sanitizeLikeString = sanitizeLikeString;\nexports.skip = skip;\nexports.sortBy = sortBy;\nexports.take = take;\nexports.unsafeLokiExpr = unsafeLokiExpr;\nexports.unsafeLokiTransform = unsafeLokiTransform;\nexports.unsafeSqlExpr = unsafeSqlExpr;\nexports.unsafeSqlQuery = unsafeSqlQuery;\nexports.weakGt = weakGt;\nexports.where = where;\nvar _invariant = _interopRequireDefault(require(\"../utils/common/invariant\"));\nvar _checkName = _interopRequireDefault(require(\"../utils/fp/checkName\"));\nvar _arrayOrSpread = _interopRequireDefault(require(\"../utils/fp/arrayOrSpread\"));\nfunction eq(valueOrColumn) {\n  return {\n    operator: 'eq',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\nfunction notEq(valueOrColumn) {\n  return {\n    operator: 'notEq',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\nfunction gt(valueOrColumn) {\n  return {\n    operator: 'gt',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\nfunction gte(valueOrColumn) {\n  return {\n    operator: 'gte',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\nfunction weakGt(valueOrColumn) {\n  return {\n    operator: 'weakGt',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\nfunction lt(valueOrColumn) {\n  return {\n    operator: 'lt',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\nfunction lte(valueOrColumn) {\n  return {\n    operator: 'lte',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\nfunction oneOf(values) {\n  (0, _invariant.default)(Array.isArray(values), \"argument passed to oneOf() is not an array\");\n  Object.freeze(values);\n  return {\n    operator: 'oneOf',\n    right: {\n      values: values\n    },\n    type: comparisonSymbol\n  };\n}\nfunction notIn(values) {\n  (0, _invariant.default)(Array.isArray(values), \"argument passed to notIn() is not an array\");\n  Object.freeze(values);\n  return {\n    operator: 'notIn',\n    right: {\n      values: values\n    },\n    type: comparisonSymbol\n  };\n}\nfunction between(left, right) {\n  (0, _invariant.default)('number' === typeof left && 'number' === typeof right, 'Values passed to Q.between() are not numbers');\n  return {\n    operator: 'between',\n    right: {\n      values: [left, right]\n    },\n    type: comparisonSymbol\n  };\n}\nfunction like(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.like() is not a string');\n  return {\n    operator: 'like',\n    right: {\n      value: value\n    },\n    type: comparisonSymbol\n  };\n}\nfunction notLike(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.notLike() is not a string');\n  return {\n    operator: 'notLike',\n    right: {\n      value: value\n    },\n    type: comparisonSymbol\n  };\n}\nvar nonLikeSafeRegexp = /[^a-zA-Z0-9]/g;\nfunction sanitizeLikeString(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.sanitizeLikeString() is not a string');\n  return value.replace(nonLikeSafeRegexp, '_');\n}\nfunction includes(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.includes() is not a string');\n  return {\n    operator: 'includes',\n    right: {\n      value: value\n    },\n    type: comparisonSymbol\n  };\n}\nfunction column(name) {\n  (0, _invariant.default)('string' === typeof name, 'Name passed to Q.column() is not a string');\n  return {\n    column: (0, _checkName.default)(name),\n    type: columnSymbol\n  };\n}\nfunction _valueOrComparison(arg) {\n  if (null === arg || 'object' !== typeof arg) {\n    return _valueOrComparison(eq(arg));\n  }\n  (0, _invariant.default)(arg.type === comparisonSymbol, 'Invalid Comparison passed to Query builder. You seem to be passing unsanitized user data to Query builder!');\n  var operator = arg.operator,\n    right = arg.right;\n  return {\n    operator: operator,\n    right: right\n  };\n}\nfunction where(left, valueOrComparison) {\n  return {\n    type: 'where',\n    left: (0, _checkName.default)(left),\n    comparison: _valueOrComparison(valueOrComparison)\n  };\n}\nfunction unsafeSqlExpr(sql) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)('string' === typeof sql, 'Value passed to Q.unsafeSqlExpr is not a string');\n  }\n  return {\n    type: 'sql',\n    expr: sql\n  };\n}\nfunction unsafeLokiExpr(expr) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(expr && 'object' === typeof expr && !Array.isArray(expr), 'Value passed to Q.unsafeLokiExpr is not an object');\n  }\n  return {\n    type: 'loki',\n    expr: expr\n  };\n}\nfunction unsafeLokiTransform(fn) {\n  return {\n    type: 'lokiTransform',\n    function: fn\n  };\n}\nvar and = function and() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var clauses = (0, _arrayOrSpread.default)(args, 'Q.and()', 'Where');\n  validateConditions(clauses);\n  return {\n    type: 'and',\n    conditions: clauses\n  };\n};\nexports.and = and;\nvar or = function or() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  var clauses = (0, _arrayOrSpread.default)(args, 'Q.or()', 'Where');\n  validateConditions(clauses);\n  return {\n    type: 'or',\n    conditions: clauses\n  };\n};\nexports.or = or;\nvar asc = 'asc';\nexports.asc = asc;\nvar desc = 'desc';\nexports.desc = desc;\nfunction sortBy(sortColumn) {\n  var sortOrder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : asc;\n  (0, _invariant.default)('asc' === sortOrder || 'desc' === sortOrder, \"Invalid sortOrder argument received in Q.sortBy (valid: asc, desc)\");\n  return {\n    type: 'sortBy',\n    sortColumn: (0, _checkName.default)(sortColumn),\n    sortOrder: sortOrder\n  };\n}\nfunction take(count) {\n  (0, _invariant.default)('number' === typeof count, 'Value passed to Q.take() is not a number');\n  return {\n    type: 'take',\n    count: count\n  };\n}\nfunction skip(count) {\n  (0, _invariant.default)('number' === typeof count, 'Value passed to Q.skip() is not a number');\n  return {\n    type: 'skip',\n    count: count\n  };\n}\nvar _on = function on(table, leftOrClauseOrList, valueOrComparison) {\n  if ('string' === typeof leftOrClauseOrList) {\n    (0, _invariant.default)(valueOrComparison !== undefined, 'illegal `undefined` passed to Q.on');\n    return _on(table, [where(leftOrClauseOrList, valueOrComparison)]);\n  }\n  var clauseOrList = leftOrClauseOrList;\n  if (Array.isArray(clauseOrList)) {\n    var conditions = clauseOrList;\n    validateConditions(conditions);\n    return {\n      type: 'on',\n      table: (0, _checkName.default)(table),\n      conditions: conditions\n    };\n  } else if (clauseOrList && 'and' === clauseOrList.type) {\n    return _on(table, clauseOrList.conditions);\n  }\n  return _on(table, [clauseOrList]);\n};\nexports.on = _on;\nfunction experimentalJoinTables(tables) {\n  (0, _invariant.default)(Array.isArray(tables), 'experimentalJoinTables expected an array');\n  return {\n    type: 'joinTables',\n    tables: tables.map(_checkName.default)\n  };\n}\nfunction experimentalNestedJoin(from, to) {\n  return {\n    type: 'nestedJoinTable',\n    from: (0, _checkName.default)(from),\n    to: (0, _checkName.default)(to)\n  };\n}\nfunction unsafeSqlQuery(sql) {\n  var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)('string' === typeof sql, 'Value passed to Q.unsafeSqlQuery is not a string');\n    (0, _invariant.default)(Array.isArray(values), 'Placeholder values passed to Q.unsafeSqlQuery are not an array');\n  }\n  return {\n    type: 'sqlQuery',\n    sql: sql,\n    values: values\n  };\n}\nvar columnSymbol = Symbol('Q.column');\nvar comparisonSymbol = Symbol('QueryComparison');\nfunction _valueOrColumn(arg) {\n  if (null === arg || 'object' !== typeof arg) {\n    (0, _invariant.default)(arg !== undefined, 'Cannot compare to undefined in a Query. Did you mean null?');\n    return {\n      value: arg\n    };\n  }\n  if ('string' === typeof arg.column) {\n    (0, _invariant.default)(arg.type === columnSymbol, 'Invalid { column: } object passed to Watermelon query. You seem to be passing unsanitized user data to Query builder!');\n    return {\n      column: arg.column\n    };\n  }\n  throw new Error(\"Invalid value passed to query\");\n}\nvar acceptableClauses = ['where', 'and', 'or', 'on', 'sql', 'loki'];\nvar isAcceptableClause = function isAcceptableClause(clause) {\n  return acceptableClauses.includes(clause.type);\n};\nvar validateConditions = function validateConditions(clauses) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(clauses.every(isAcceptableClause), 'Q.and(), Q.or(), Q.on() can only contain: Q.where, Q.and, Q.or, Q.on, Q.unsafeSqlExpr, Q.unsafeLokiExpr clauses');\n  }\n};","map":{"version":3,"names":["_interopRequireDefault","require","exports","__esModule","asc","and","between","column","desc","eq","experimentalJoinTables","experimentalNestedJoin","gt","gte","includes","like","lt","lte","notEq","notIn","notLike","on","oneOf","or","sanitizeLikeString","skip","sortBy","take","unsafeLokiExpr","unsafeLokiTransform","unsafeSqlExpr","unsafeSqlQuery","weakGt","where","_invariant","_checkName","_arrayOrSpread","valueOrColumn","operator","right","_valueOrColumn","type","comparisonSymbol","values","default","Array","isArray","Object","freeze","left","value","nonLikeSafeRegexp","replace","name","columnSymbol","_valueOrComparison","arg","valueOrComparison","comparison","sql","process","env","NODE_ENV","expr","fn","function","_len","arguments","length","args","_key","clauses","validateConditions","conditions","_len2","_key2","sortColumn","sortOrder","undefined","count","table","leftOrClauseOrList","clauseOrList","tables","map","from","to","Symbol","Error","acceptableClauses","isAcceptableClause","clause","every"],"sources":["/app/node_modules/@nozbe/watermelondb/QueryDescription/operators.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.asc = exports.and = void 0;\nexports.between = between;\nexports.column = column;\nexports.desc = void 0;\nexports.eq = eq;\nexports.experimentalJoinTables = experimentalJoinTables;\nexports.experimentalNestedJoin = experimentalNestedJoin;\nexports.gt = gt;\nexports.gte = gte;\nexports.includes = includes;\nexports.like = like;\nexports.lt = lt;\nexports.lte = lte;\nexports.notEq = notEq;\nexports.notIn = notIn;\nexports.notLike = notLike;\nexports.on = void 0;\nexports.oneOf = oneOf;\nexports.or = void 0;\nexports.sanitizeLikeString = sanitizeLikeString;\nexports.skip = skip;\nexports.sortBy = sortBy;\nexports.take = take;\nexports.unsafeLokiExpr = unsafeLokiExpr;\nexports.unsafeLokiTransform = unsafeLokiTransform;\nexports.unsafeSqlExpr = unsafeSqlExpr;\nexports.unsafeSqlQuery = unsafeSqlQuery;\nexports.weakGt = weakGt;\nexports.where = where;\nvar _invariant = _interopRequireDefault(require(\"../utils/common/invariant\"));\nvar _checkName = _interopRequireDefault(require(\"../utils/fp/checkName\"));\nvar _arrayOrSpread = _interopRequireDefault(require(\"../utils/fp/arrayOrSpread\"));\n/* eslint-disable no-use-before-define */\n// don't import whole `utils` to keep worker size small\n// Note: These operators are designed to match SQLite semantics\n// to ensure that iOS, Android, web, and Query observation yield exactly the same results\n//\n// - `true` and `false` are equal to `1` and `0`\n//   (JS uses true/false, but SQLite uses 1/0)\n// - `null`, `undefined`, and missing fields are equal\n//   (SQLite queries return null, but newly created records might lack fields)\n// - You can only compare columns to values/other columns of the same type\n//   (e.g. string to int comparisons are not allowed)\n// - numeric comparisons (<, <=, >, >=, between) with null on either side always return false\n//   e.g. `null < 2 == false`\n// - `null` on the right-hand-side of IN/NOT IN is not allowed\n//   e.g. `Q.in([null, 'foo', 'bar'])`\n// - `null` on the left-hand-side of IN/NOT IN will always return false\n//   e.g. `null NOT IN (1, 2, 3) == false`\n// Equals (weakly)\n// Note:\n// - (null == undefined) == true\n// - (1 == true) == true\n// - (0 == false) == true\nfunction eq(valueOrColumn) {\n  return {\n    operator: 'eq',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Not equal (weakly)\n// Note:\n// - (null != undefined) == false\n// - (1 != true) == false\n// - (0 != false) == false\nfunction notEq(valueOrColumn) {\n  return {\n    operator: 'notEq',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Greater than (SQLite semantics)\n// Note:\n// - (5 > null) == false\nfunction gt(valueOrColumn) {\n  return {\n    operator: 'gt',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Greater than or equal (SQLite semantics)\n// Note:\n// - (5 >= null) == false\nfunction gte(valueOrColumn) {\n  return {\n    operator: 'gte',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Greater than (JavaScript semantics)\n// Note:\n// - (5 > null) == true\nfunction weakGt(valueOrColumn) {\n  return {\n    operator: 'weakGt',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Less than (SQLite semantics)\n// Note:\n// - (null < 5) == false\nfunction lt(valueOrColumn) {\n  return {\n    operator: 'lt',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Less than or equal (SQLite semantics)\n// Note:\n// - (null <= 5) == false\nfunction lte(valueOrColumn) {\n  return {\n    operator: 'lte',\n    right: _valueOrColumn(valueOrColumn),\n    type: comparisonSymbol\n  };\n}\n\n// Value in a set (SQLite IN semantics)\n// Note:\n// - `null` in `values` is not allowed!\nfunction oneOf(values) {\n  (0, _invariant.default)(Array.isArray(values), \"argument passed to oneOf() is not an array\");\n  Object.freeze(values); // even in production, because it's an easy mistake to make\n\n  return {\n    operator: 'oneOf',\n    right: {\n      values: values\n    },\n    type: comparisonSymbol\n  };\n}\n\n// Value not in a set (SQLite NOT IN semantics)\n// Note:\n// - `null` in `values` is not allowed!\n// - (null NOT IN (1, 2, 3)) == false\nfunction notIn(values) {\n  (0, _invariant.default)(Array.isArray(values), \"argument passed to notIn() is not an array\");\n  Object.freeze(values); // even in production, because it's an easy mistake to make\n\n  return {\n    operator: 'notIn',\n    right: {\n      values: values\n    },\n    type: comparisonSymbol\n  };\n}\n\n// Number is between two numbers (greater than or equal left, and less than or equal right)\nfunction between(left, right) {\n  (0, _invariant.default)('number' === typeof left && 'number' === typeof right, 'Values passed to Q.between() are not numbers');\n  return {\n    operator: 'between',\n    right: {\n      values: [left, right]\n    },\n    type: comparisonSymbol\n  };\n}\nfunction like(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.like() is not a string');\n  return {\n    operator: 'like',\n    right: {\n      value: value\n    },\n    type: comparisonSymbol\n  };\n}\nfunction notLike(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.notLike() is not a string');\n  return {\n    operator: 'notLike',\n    right: {\n      value: value\n    },\n    type: comparisonSymbol\n  };\n}\nvar nonLikeSafeRegexp = /[^a-zA-Z0-9]/g;\nfunction sanitizeLikeString(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.sanitizeLikeString() is not a string');\n  return value.replace(nonLikeSafeRegexp, '_');\n}\nfunction includes(value) {\n  (0, _invariant.default)('string' === typeof value, 'Value passed to Q.includes() is not a string');\n  return {\n    operator: 'includes',\n    right: {\n      value: value\n    },\n    type: comparisonSymbol\n  };\n}\nfunction column(name) {\n  (0, _invariant.default)('string' === typeof name, 'Name passed to Q.column() is not a string');\n  return {\n    column: (0, _checkName.default)(name),\n    type: columnSymbol\n  };\n}\nfunction _valueOrComparison(arg) {\n  if (null === arg || 'object' !== typeof arg) {\n    return _valueOrComparison(eq(arg));\n  }\n  (0, _invariant.default)(arg.type === comparisonSymbol, 'Invalid Comparison passed to Query builder. You seem to be passing unsanitized user data to Query builder!');\n  var {\n    operator: operator,\n    right: right\n  } = arg;\n  return {\n    operator: operator,\n    right: right\n  };\n}\nfunction where(left, valueOrComparison) {\n  return {\n    type: 'where',\n    left: (0, _checkName.default)(left),\n    comparison: _valueOrComparison(valueOrComparison)\n  };\n}\nfunction unsafeSqlExpr(sql) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)('string' === typeof sql, 'Value passed to Q.unsafeSqlExpr is not a string');\n  }\n  return {\n    type: 'sql',\n    expr: sql\n  };\n}\nfunction unsafeLokiExpr(expr) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(expr && 'object' === typeof expr && !Array.isArray(expr), 'Value passed to Q.unsafeLokiExpr is not an object');\n  }\n  return {\n    type: 'loki',\n    expr: expr\n  };\n}\nfunction unsafeLokiTransform(fn) {\n  return {\n    type: 'lokiTransform',\n    function: fn\n  };\n}\nvar and = function (...args) {\n  var clauses = (0, _arrayOrSpread.default)(args, 'Q.and()', 'Where');\n  validateConditions(clauses);\n  return {\n    type: 'and',\n    conditions: clauses\n  };\n};\nexports.and = and;\nvar or = function (...args) {\n  var clauses = (0, _arrayOrSpread.default)(args, 'Q.or()', 'Where');\n  validateConditions(clauses);\n  return {\n    type: 'or',\n    conditions: clauses\n  };\n};\nexports.or = or;\nvar asc = 'asc';\nexports.asc = asc;\nvar desc = 'desc';\nexports.desc = desc;\nfunction sortBy(sortColumn, sortOrder = asc) {\n  (0, _invariant.default)('asc' === sortOrder || 'desc' === sortOrder, \"Invalid sortOrder argument received in Q.sortBy (valid: asc, desc)\");\n  return {\n    type: 'sortBy',\n    sortColumn: (0, _checkName.default)(sortColumn),\n    sortOrder: sortOrder\n  };\n}\nfunction take(count) {\n  (0, _invariant.default)('number' === typeof count, 'Value passed to Q.take() is not a number');\n  return {\n    type: 'take',\n    count: count\n  };\n}\nfunction skip(count) {\n  (0, _invariant.default)('number' === typeof count, 'Value passed to Q.skip() is not a number');\n  return {\n    type: 'skip',\n    count: count\n  };\n}\n\n// Note: we have to write out three separate meanings of OnFunction because of a Babel bug\n// (it will remove the parentheses, changing the meaning of the flow type)\n\n// Use: on('tableName', 'left_column', 'right_value')\n// or: on('tableName', 'left_column', gte(10))\n// or: on('tableName', where('left_column', 'value')))\n// or: on('tableName', or(...))\n// or: on('tableName', [where(...), where(...)])\nvar on = function (table, leftOrClauseOrList, valueOrComparison) {\n  if ('string' === typeof leftOrClauseOrList) {\n    (0, _invariant.default)(valueOrComparison !== undefined, 'illegal `undefined` passed to Q.on');\n    return on(table, [where(leftOrClauseOrList, valueOrComparison)]);\n  }\n  var clauseOrList = leftOrClauseOrList;\n  if (Array.isArray(clauseOrList)) {\n    var conditions = clauseOrList;\n    validateConditions(conditions);\n    return {\n      type: 'on',\n      table: (0, _checkName.default)(table),\n      conditions: conditions\n    };\n  } else if (clauseOrList && 'and' === clauseOrList.type) {\n    return on(table, clauseOrList.conditions);\n  }\n  return on(table, [clauseOrList]);\n};\nexports.on = on;\nfunction experimentalJoinTables(tables) {\n  (0, _invariant.default)(Array.isArray(tables), 'experimentalJoinTables expected an array');\n  return {\n    type: 'joinTables',\n    tables: tables.map(_checkName.default)\n  };\n}\nfunction experimentalNestedJoin(from, to) {\n  return {\n    type: 'nestedJoinTable',\n    from: (0, _checkName.default)(from),\n    to: (0, _checkName.default)(to)\n  };\n}\nfunction unsafeSqlQuery(sql, values = []) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)('string' === typeof sql, 'Value passed to Q.unsafeSqlQuery is not a string');\n    (0, _invariant.default)(Array.isArray(values), 'Placeholder values passed to Q.unsafeSqlQuery are not an array');\n  }\n  return {\n    type: 'sqlQuery',\n    sql: sql,\n    values: values\n  };\n}\nvar columnSymbol = Symbol('Q.column');\nvar comparisonSymbol = Symbol('QueryComparison');\nfunction _valueOrColumn(arg) {\n  if (null === arg || 'object' !== typeof arg) {\n    (0, _invariant.default)(arg !== undefined, 'Cannot compare to undefined in a Query. Did you mean null?');\n    return {\n      value: arg\n    };\n  }\n  if ('string' === typeof arg.column) {\n    (0, _invariant.default)(arg.type === columnSymbol, 'Invalid { column: } object passed to Watermelon query. You seem to be passing unsanitized user data to Query builder!');\n    return {\n      column: arg.column\n    };\n  }\n  throw new Error(\"Invalid value passed to query\");\n}\nvar acceptableClauses = ['where', 'and', 'or', 'on', 'sql', 'loki'];\nvar isAcceptableClause = function (clause) {\n  return acceptableClauses.includes(clause.type);\n};\nvar validateConditions = function (clauses) {\n  if ('production' !== process.env.NODE_ENV) {\n    (0, _invariant.default)(clauses.every(isAcceptableClause), 'Q.and(), Q.or(), Q.on() can only contain: Q.where, Q.and, Q.or, Q.on, Q.unsafeSqlExpr, Q.unsafeLokiExpr clauses');\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}