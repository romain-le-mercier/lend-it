{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createStyles } from \"../../../utils/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar filterOptions = [{\n  value: 'all',\n  label: 'All'\n}, {\n  value: 'active',\n  label: 'Active'\n}, {\n  value: 'overdue',\n  label: 'Overdue'\n}, {\n  value: 'returned',\n  label: 'Returned'\n}];\nvar sortOptions = [{\n  value: 'dueDate',\n  label: 'Due Date'\n}, {\n  value: 'borrowerName',\n  label: 'Borrower'\n}, {\n  value: 'itemName',\n  label: 'Item'\n}, {\n  value: 'status',\n  label: 'Status'\n}];\nexport var FilterBar = function FilterBar(_ref) {\n  var filterBy = _ref.filterBy,\n    sortBy = _ref.sortBy,\n    onFilterChange = _ref.onFilterChange,\n    onSortChange = _ref.onSortChange;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      contentContainerStyle: styles.scrollContent,\n      children: [_jsxs(View, {\n        style: styles.section,\n        children: [_jsx(Text, {\n          style: styles.sectionLabel,\n          children: \"Filter:\"\n        }), filterOptions.map(function (option) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.chip, filterBy === option.value && styles.chipActive],\n            onPress: function onPress() {\n              return onFilterChange(option.value);\n            },\n            children: _jsx(Text, {\n              style: [styles.chipText, filterBy === option.value && styles.chipTextActive],\n              children: option.label\n            })\n          }, option.value);\n        })]\n      }), _jsxs(View, {\n        style: [styles.section, styles.sortSection],\n        children: [_jsx(Text, {\n          style: styles.sectionLabel,\n          children: \"Sort:\"\n        }), sortOptions.map(function (option) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.chip, sortBy === option.value && styles.chipActive],\n            onPress: function onPress() {\n              return onSortChange(option.value);\n            },\n            children: _jsx(Text, {\n              style: [styles.chipText, sortBy === option.value && styles.chipTextActive],\n              children: option.label\n            })\n          }, option.value);\n        })]\n      })]\n    })\n  });\n};\nvar styles = createStyles(function (theme) {\n  return {\n    container: {\n      marginBottom: theme.spacing.md\n    },\n    scrollContent: {\n      paddingHorizontal: theme.spacing.xs\n    },\n    section: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginRight: theme.spacing.lg\n    },\n    sortSection: {\n      marginLeft: theme.spacing.md\n    },\n    sectionLabel: {\n      fontSize: theme.typography.fontSize.sm,\n      color: theme.colors.text.secondary,\n      marginRight: theme.spacing.sm,\n      fontWeight: '500'\n    },\n    chip: {\n      backgroundColor: theme.colors.background.card,\n      borderWidth: 1,\n      borderColor: theme.colors.border.default,\n      borderRadius: theme.borderRadius.full,\n      paddingHorizontal: theme.spacing.md,\n      paddingVertical: theme.spacing.xs,\n      marginHorizontal: theme.spacing.xs / 2\n    },\n    chipActive: {\n      backgroundColor: theme.colors.primary.purple,\n      borderColor: theme.colors.primary.purple\n    },\n    chipText: {\n      fontSize: theme.typography.fontSize.sm,\n      color: theme.colors.text.secondary\n    },\n    chipTextActive: {\n      color: theme.colors.text.primary,\n      fontWeight: '600'\n    }\n  };\n});","map":{"version":3,"names":["React","View","ScrollView","TouchableOpacity","Text","createStyles","jsx","_jsx","jsxs","_jsxs","filterOptions","value","label","sortOptions","FilterBar","_ref","filterBy","sortBy","onFilterChange","onSortChange","style","styles","container","children","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollContent","section","sectionLabel","map","option","chip","chipActive","onPress","chipText","chipTextActive","sortSection","theme","marginBottom","spacing","md","paddingHorizontal","xs","flexDirection","alignItems","marginRight","lg","marginLeft","fontSize","typography","sm","color","colors","text","secondary","fontWeight","backgroundColor","background","card","borderWidth","borderColor","border","default","borderRadius","full","paddingVertical","marginHorizontal","primary","purple"],"sources":["/app/src/presentation/components/common/FilterBar.tsx"],"sourcesContent":["import React from 'react';\nimport { View, ScrollView, TouchableOpacity, Text } from 'react-native';\nimport { createStyles } from '@/utils/theme';\nimport { FilterOption, SortOption } from '@/domain/usecases/GetLentItemsUseCase';\n\ninterface FilterBarProps {\n  filterBy: FilterOption;\n  sortBy: SortOption;\n  onFilterChange: (filter: FilterOption) => void;\n  onSortChange: (sort: SortOption) => void;\n}\n\nconst filterOptions: { value: FilterOption; label: string }[] = [\n  { value: 'all', label: 'All' },\n  { value: 'active', label: 'Active' },\n  { value: 'overdue', label: 'Overdue' },\n  { value: 'returned', label: 'Returned' },\n];\n\nconst sortOptions: { value: SortOption; label: string }[] = [\n  { value: 'dueDate', label: 'Due Date' },\n  { value: 'borrowerName', label: 'Borrower' },\n  { value: 'itemName', label: 'Item' },\n  { value: 'status', label: 'Status' },\n];\n\nexport const FilterBar: React.FC<FilterBarProps> = ({\n  filterBy,\n  sortBy,\n  onFilterChange,\n  onSortChange,\n}) => {\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        contentContainerStyle={styles.scrollContent}\n      >\n        <View style={styles.section}>\n          <Text style={styles.sectionLabel}>Filter:</Text>\n          {filterOptions.map((option) => (\n            <TouchableOpacity\n              key={option.value}\n              style={[\n                styles.chip,\n                filterBy === option.value && styles.chipActive,\n              ]}\n              onPress={() => onFilterChange(option.value)}\n            >\n              <Text\n                style={[\n                  styles.chipText,\n                  filterBy === option.value && styles.chipTextActive,\n                ]}\n              >\n                {option.label}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n\n        <View style={[styles.section, styles.sortSection]}>\n          <Text style={styles.sectionLabel}>Sort:</Text>\n          {sortOptions.map((option) => (\n            <TouchableOpacity\n              key={option.value}\n              style={[\n                styles.chip,\n                sortBy === option.value && styles.chipActive,\n              ]}\n              onPress={() => onSortChange(option.value)}\n            >\n              <Text\n                style={[\n                  styles.chipText,\n                  sortBy === option.value && styles.chipTextActive,\n                ]}\n              >\n                {option.label}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = createStyles((theme) => ({\n  container: {\n    marginBottom: theme.spacing.md,\n  },\n  scrollContent: {\n    paddingHorizontal: theme.spacing.xs,\n  },\n  section: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: theme.spacing.lg,\n  },\n  sortSection: {\n    marginLeft: theme.spacing.md,\n  },\n  sectionLabel: {\n    fontSize: theme.typography.fontSize.sm,\n    color: theme.colors.text.secondary,\n    marginRight: theme.spacing.sm,\n    fontWeight: '500',\n  },\n  chip: {\n    backgroundColor: theme.colors.background.card,\n    borderWidth: 1,\n    borderColor: theme.colors.border.default,\n    borderRadius: theme.borderRadius.full,\n    paddingHorizontal: theme.spacing.md,\n    paddingVertical: theme.spacing.xs,\n    marginHorizontal: theme.spacing.xs / 2,\n  },\n  chipActive: {\n    backgroundColor: theme.colors.primary.purple,\n    borderColor: theme.colors.primary.purple,\n  },\n  chipText: {\n    fontSize: theme.typography.fontSize.sm,\n    color: theme.colors.text.secondary,\n  },\n  chipTextActive: {\n    color: theme.colors.text.primary,\n    fontWeight: '600',\n  },\n}));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}