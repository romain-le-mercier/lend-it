{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _makeDecorator = _interopRequireDefault(require(\"../../utils/common/makeDecorator\"));\nvar _invariant = _interopRequireDefault(require(\"../../utils/common/invariant\"));\nvar nochange = (0, _makeDecorator.default)(function () {\n  return function (target, key, descriptor) {\n    (0, _invariant.default)(descriptor.set, \"@nochange can only be applied to model fields (to properties with a setter)\");\n    var errorMessage = \"Attempt to set a new value on a @nochange field: \".concat(target.constructor.name, \".prototype.\").concat(key);\n    return (0, _extends2.default)({}, descriptor, {\n      set: function set(value) {\n        var model = this;\n        (0, _invariant.default)('create' === model.asModel._preparedState, errorMessage);\n        descriptor.set.call(model, value);\n      }\n    });\n  };\n});\nvar _default = nochange;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","exports","__esModule","default","_extends2","_makeDecorator","_invariant","nochange","target","key","descriptor","set","errorMessage","concat","constructor","name","value","model","asModel","_preparedState","call","_default"],"sources":["/app/node_modules/@nozbe/watermelondb/decorators/nochange/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _makeDecorator = _interopRequireDefault(require(\"../../utils/common/makeDecorator\"));\nvar _invariant = _interopRequireDefault(require(\"../../utils/common/invariant\"));\n// Marks a model field as immutable after create â€” you can set and change the value in\n// create() and prepareCreate(), but after it's saved to the database, it cannot be changed\nvar nochange = (0, _makeDecorator.default)(function () {\n  return function (target, key, descriptor) {\n    (0, _invariant.default)(descriptor.set, \"@nochange can only be applied to model fields (to properties with a setter)\");\n    var errorMessage = \"Attempt to set a new value on a @nochange field: \".concat(target.constructor.name, \".prototype.\").concat(key);\n    return (0, _extends2.default)({}, descriptor, {\n      set: function set(value) {\n        // $FlowFixMe\n        var model = this;\n        (0, _invariant.default)('create' === model.asModel._preparedState, errorMessage);\n        descriptor.set.call(model, value);\n      }\n    });\n  };\n});\nvar _default = nochange;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AACpFC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,SAAS,GAAGL,sBAAsB,CAACC,OAAO,CAAC,gCAAgC,CAAC,CAAC;AACjF,IAAIK,cAAc,GAAGN,sBAAsB,CAACC,OAAO,mCAAmC,CAAC,CAAC;AACxF,IAAIM,UAAU,GAAGP,sBAAsB,CAACC,OAAO,+BAA+B,CAAC,CAAC;AAGhF,IAAIO,QAAQ,GAAG,CAAC,CAAC,EAAEF,cAAc,CAACF,OAAO,EAAE,YAAY;EACrD,OAAO,UAAUK,MAAM,EAAEC,GAAG,EAAEC,UAAU,EAAE;IACxC,CAAC,CAAC,EAAEJ,UAAU,CAACH,OAAO,EAAEO,UAAU,CAACC,GAAG,EAAE,6EAA6E,CAAC;IACtH,IAAIC,YAAY,GAAG,mDAAmD,CAACC,MAAM,CAACL,MAAM,CAACM,WAAW,CAACC,IAAI,EAAE,aAAa,CAAC,CAACF,MAAM,CAACJ,GAAG,CAAC;IACjI,OAAO,CAAC,CAAC,EAAEL,SAAS,CAACD,OAAO,EAAE,CAAC,CAAC,EAAEO,UAAU,EAAE;MAC5CC,GAAG,EAAE,SAASA,GAAGA,CAACK,KAAK,EAAE;QAEvB,IAAIC,KAAK,GAAG,IAAI;QAChB,CAAC,CAAC,EAAEX,UAAU,CAACH,OAAO,EAAE,QAAQ,KAAKc,KAAK,CAACC,OAAO,CAACC,cAAc,EAAEP,YAAY,CAAC;QAChFF,UAAU,CAACC,GAAG,CAACS,IAAI,CAACH,KAAK,EAAED,KAAK,CAAC;MACnC;IACF,CAAC,CAAC;EACJ,CAAC;AACH,CAAC,CAAC;AACF,IAAIK,QAAQ,GAAGd,QAAQ;AACvBN,OAAO,CAACE,OAAO,GAAGkB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}