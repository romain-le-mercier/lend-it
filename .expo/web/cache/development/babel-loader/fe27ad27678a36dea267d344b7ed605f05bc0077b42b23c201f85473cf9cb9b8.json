{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport * as Localization from 'react-native-localize';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport enTranslation from \"./locales/en/translation.json\";\nimport frTranslation from \"./locales/fr/translation.json\";\nimport deTranslation from \"./locales/de/translation.json\";\nimport esTranslation from \"./locales/es/translation.json\";\nimport nlTranslation from \"./locales/nl/translation.json\";\nvar LANGUAGE_KEY = '@lend_it_language';\nvar resources = {\n  en: {\n    translation: enTranslation\n  },\n  fr: {\n    translation: frTranslation\n  },\n  de: {\n    translation: deTranslation\n  },\n  es: {\n    translation: esTranslation\n  },\n  nl: {\n    translation: nlTranslation\n  }\n};\nvar getStoredLanguage = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      return yield AsyncStorage.getItem(LANGUAGE_KEY);\n    } catch (error) {\n      console.error('Failed to get stored language:', error);\n      return null;\n    }\n  });\n  return function getStoredLanguage() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar storeLanguage = function () {\n  var _ref2 = _asyncToGenerator(function* (language) {\n    try {\n      yield AsyncStorage.setItem(LANGUAGE_KEY, language);\n    } catch (error) {\n      console.error('Failed to store language:', error);\n    }\n  });\n  return function storeLanguage(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar getDeviceLanguage = function getDeviceLanguage() {\n  var locales = Localization.getLocales();\n  if (locales.length > 0) {\n    var deviceLang = locales[0].languageCode;\n    if (Object.keys(resources).includes(deviceLang)) {\n      return deviceLang;\n    }\n  }\n  return 'en';\n};\nexport var initI18n = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    var storedLang = yield getStoredLanguage();\n    var initialLang = storedLang || getDeviceLanguage();\n    yield i18n.use(initReactI18next).init({\n      resources: resources,\n      lng: initialLang,\n      fallbackLng: 'en',\n      interpolation: {\n        escapeValue: false\n      },\n      react: {\n        useSuspense: false\n      }\n    });\n    return i18n;\n  });\n  return function initI18n() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var changeLanguage = function () {\n  var _ref4 = _asyncToGenerator(function* (language) {\n    yield i18n.changeLanguage(language);\n    yield storeLanguage(language);\n  });\n  return function changeLanguage(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport { i18n };","map":{"version":3,"names":["i18n","initReactI18next","Localization","AsyncStorage","enTranslation","frTranslation","deTranslation","esTranslation","nlTranslation","LANGUAGE_KEY","resources","en","translation","fr","de","es","nl","getStoredLanguage","_ref","_asyncToGenerator","getItem","error","console","apply","arguments","storeLanguage","_ref2","language","setItem","_x","getDeviceLanguage","locales","getLocales","length","deviceLang","languageCode","Object","keys","includes","initI18n","_ref3","storedLang","initialLang","use","init","lng","fallbackLng","interpolation","escapeValue","react","useSuspense","changeLanguage","_ref4","_x2"],"sources":["/app/src/i18n/index.ts"],"sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport * as Localization from 'react-native-localize';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Import translations\nimport enTranslation from './locales/en/translation.json';\nimport frTranslation from './locales/fr/translation.json';\nimport deTranslation from './locales/de/translation.json';\nimport esTranslation from './locales/es/translation.json';\nimport nlTranslation from './locales/nl/translation.json';\n\nconst LANGUAGE_KEY = '@lend_it_language';\n\nconst resources = {\n  en: { translation: enTranslation },\n  fr: { translation: frTranslation },\n  de: { translation: deTranslation },\n  es: { translation: esTranslation },\n  nl: { translation: nlTranslation },\n};\n\nconst getStoredLanguage = async (): Promise<string | null> => {\n  try {\n    return await AsyncStorage.getItem(LANGUAGE_KEY);\n  } catch (error) {\n    console.error('Failed to get stored language:', error);\n    return null;\n  }\n};\n\nconst storeLanguage = async (language: string): Promise<void> => {\n  try {\n    await AsyncStorage.setItem(LANGUAGE_KEY, language);\n  } catch (error) {\n    console.error('Failed to store language:', error);\n  }\n};\n\nconst getDeviceLanguage = (): string => {\n  const locales = Localization.getLocales();\n  if (locales.length > 0) {\n    const deviceLang = locales[0].languageCode;\n    // Check if we support this language\n    if (Object.keys(resources).includes(deviceLang)) {\n      return deviceLang;\n    }\n  }\n  return 'en'; // Default to English\n};\n\nexport const initI18n = async () => {\n  // Try to get stored language first\n  const storedLang = await getStoredLanguage();\n  const initialLang = storedLang || getDeviceLanguage();\n\n  await i18n\n    .use(initReactI18next)\n    .init({\n      resources,\n      lng: initialLang,\n      fallbackLng: 'en',\n      interpolation: {\n        escapeValue: false, // React already escapes values\n      },\n      react: {\n        useSuspense: false, // Disable suspense for React Native\n      },\n    });\n\n  return i18n;\n};\n\nexport const changeLanguage = async (language: string) => {\n  await i18n.changeLanguage(language);\n  await storeLanguage(language);\n};\n\nexport { i18n };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}